[{"C:\\laragon\\www\\loja-bim\\src\\index.js":"1","C:\\laragon\\www\\loja-bim\\src\\App.js":"2","C:\\laragon\\www\\loja-bim\\src\\Routes.js":"3","C:\\laragon\\www\\loja-bim\\src\\Welcome.js":"4","C:\\laragon\\www\\loja-bim\\src\\store\\store.js":"5","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\rootReducer.js":"6","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\loading.reducer.js":"7","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\loading.action.js":"8","C:\\laragon\\www\\loja-bim\\src\\view\\components\\index.js":"9","C:\\laragon\\www\\loja-bim\\src\\view\\components\\Loading.js":"10","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\notify.reducer.js":"11","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\notify.action.js":"12","C:\\laragon\\www\\loja-bim\\src\\view\\components\\Notify.js":"13","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\alert.reducer.js":"14","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\alert.action.js":"15","C:\\laragon\\www\\loja-bim\\src\\view\\components\\Alert.js":"16","C:\\laragon\\www\\loja-bim\\src\\view\\components\\Confirm.js":"17","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\auth.reducer.js":"18","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\auth.action.js":"19","C:\\laragon\\www\\loja-bim\\src\\view\\auth\\index.js":"20","C:\\laragon\\www\\loja-bim\\src\\config\\Http.js":"21","C:\\laragon\\www\\loja-bim\\src\\config\\App.js":"22","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\register.reducer.js":"23","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\register.action.js":"24","C:\\laragon\\www\\loja-bim\\src\\view\\register\\index.js":"25","C:\\laragon\\www\\loja-bim\\src\\view\\header\\index.js":"26","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\items.action.js":"27","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\items.reducer.js":"28","C:\\laragon\\www\\loja-bim\\src\\view\\items\\index.js":"29","C:\\laragon\\www\\loja-bim\\src\\view\\me\\index.js":"30","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\me.reducer.js":"31","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\me.action.js":"32","C:\\laragon\\www\\loja-bim\\src\\view\\bannerItems\\index.js":"33","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\cart.reducer.js":"34","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\cart.action.js":"35","C:\\laragon\\www\\loja-bim\\src\\view\\cart\\index.js":"36","C:\\laragon\\www\\loja-bim\\src\\view\\footer\\index.js":"37","C:\\laragon\\www\\loja-bim\\src\\view\\showPhotos\\index.js":"38","C:\\laragon\\www\\loja-bim\\src\\view\\cart\\endereco\\index.js":"39","C:\\laragon\\www\\loja-bim\\src\\view\\encomendas\\index.js":"40","C:\\laragon\\www\\loja-bim\\src\\view\\encomendas\\ConsultaEncomenda.js":"41","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\problem.action.js":"42","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\problem.reducer.js":"43","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\showItems.action.js":"44","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\showItems.reducer.js":"45"},{"size":197,"mtime":1623292451134,"results":"46","hashOfConfig":"47"},{"size":1561,"mtime":1647383169442,"results":"48","hashOfConfig":"47"},{"size":1079,"mtime":1615151709927,"results":"49","hashOfConfig":"47"},{"size":1927,"mtime":1639248398329,"results":"50","hashOfConfig":"47"},{"size":259,"mtime":1613499397846,"results":"51","hashOfConfig":"47"},{"size":616,"mtime":1637531849467,"results":"52","hashOfConfig":"47"},{"size":314,"mtime":1613506615720,"results":"53","hashOfConfig":"47"},{"size":146,"mtime":1613502828578,"results":"54","hashOfConfig":"47"},{"size":211,"mtime":1613525872053,"results":"55","hashOfConfig":"47"},{"size":814,"mtime":1613504221278,"results":"56","hashOfConfig":"47"},{"size":397,"mtime":1613508274864,"results":"57","hashOfConfig":"47"},{"size":144,"mtime":1613506192777,"results":"58","hashOfConfig":"47"},{"size":1159,"mtime":1613527976913,"results":"59","hashOfConfig":"47"},{"size":344,"mtime":1613526067824,"results":"60","hashOfConfig":"47"},{"size":142,"mtime":1613508735836,"results":"61","hashOfConfig":"47"},{"size":1228,"mtime":1613509931130,"results":"62","hashOfConfig":"47"},{"size":693,"mtime":1613512473800,"results":"63","hashOfConfig":"47"},{"size":487,"mtime":1613529450786,"results":"64","hashOfConfig":"47"},{"size":1756,"mtime":1623292101074,"results":"65","hashOfConfig":"47"},{"size":3883,"mtime":1625957562856,"results":"66","hashOfConfig":"47"},{"size":566,"mtime":1622752064762,"results":"67","hashOfConfig":"47"},{"size":105,"mtime":1651791143621,"results":"68","hashOfConfig":"47"},{"size":725,"mtime":1634125149025,"results":"69","hashOfConfig":"47"},{"size":1632,"mtime":1625978221703,"results":"70","hashOfConfig":"47"},{"size":6253,"mtime":1630523673882,"results":"71","hashOfConfig":"47"},{"size":4424,"mtime":1639883011260,"results":"72","hashOfConfig":"47"},{"size":1311,"mtime":1625020020562,"results":"73","hashOfConfig":"47"},{"size":631,"mtime":1624415316320,"results":"74","hashOfConfig":"47"},{"size":829,"mtime":1623536940822,"results":"75","hashOfConfig":"47"},{"size":804,"mtime":1615168287237,"results":"76","hashOfConfig":"47"},{"size":485,"mtime":1617460082877,"results":"77","hashOfConfig":"47"},{"size":438,"mtime":1626557196047,"results":"78","hashOfConfig":"47"},{"size":11485,"mtime":1651791675313,"results":"79","hashOfConfig":"47"},{"size":2395,"mtime":1623982882444,"results":"80","hashOfConfig":"47"},{"size":1602,"mtime":1623982160671,"results":"81","hashOfConfig":"47"},{"size":7039,"mtime":1633572339735,"results":"82","hashOfConfig":"47"},{"size":7137,"mtime":1638497574153,"results":"83","hashOfConfig":"47"},{"size":933,"mtime":1651794344680,"results":"84","hashOfConfig":"47"},{"size":16016,"mtime":1639241480912,"results":"85","hashOfConfig":"47"},{"size":2596,"mtime":1639956397533,"results":"86","hashOfConfig":"47"},{"size":2113,"mtime":1639956407999,"results":"87","hashOfConfig":"47"},{"size":1366,"mtime":1634220776118,"results":"88","hashOfConfig":"47"},{"size":696,"mtime":1634127783612,"results":"89","hashOfConfig":"47"},{"size":151,"mtime":1637531467704,"results":"90","hashOfConfig":"47"},{"size":278,"mtime":1637532138518,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1cc82oa",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"94"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"94"},"C:\\laragon\\www\\loja-bim\\src\\index.js",[],["207","208"],"C:\\laragon\\www\\loja-bim\\src\\App.js",[],"C:\\laragon\\www\\loja-bim\\src\\Routes.js",[],"C:\\laragon\\www\\loja-bim\\src\\Welcome.js",["209","210","211"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport capa02 from './public/banners/capa02.jpg';\r\nimport capa03 from './public/banners/capa03.jpg';\r\nimport BannerItems from './view/bannerItems';\r\nimport Header from './view/header';\r\nimport Footer from './view/footer';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport texto02 from './public/banners/texto02.png';\r\nimport texto3 from './public/banners/texto3.png';\r\n\r\nconst Section1 = styled.div`\r\n  min-height: 60vh;\r\n  width: 100vw;\r\n  background-image: url(${capa03});\r\n  background-size: cover;\r\n  background-position: 50% 40%;\r\n  background-repeat: no-repeat;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Section2 = styled.div`\r\nmin-height: 60vh;\r\nwidth: 100vw;\r\nbackground-image: url(${capa02});\r\nbackground-size: cover;\r\nbackground-position: 50% 40%;\r\nbackground-repeat: no-repeat;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\n\r\nconst BannerRow = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  font-size: 3.0em;\r\n`;\r\n\r\nconst Section3 = styled.div`\r\n  min-height: 124vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst IMG = styled.img`\r\n  max-width: 50vw;\r\n  max-height: 30vh;\r\n`;\r\n\r\nconst Items = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nexport default function Welcome() {\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Carousel className='carousel-dif' indicators={false}>\r\n        <Carousel.Item>\r\n          <Section1>\r\n            <IMG\r\n              src={texto02}\r\n              alt=\"First slide\"\r\n            />\r\n          </Section1>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n        <Section2>\r\n            <IMG\r\n              src={texto3}\r\n              alt=\"Second slide\"\r\n            />\r\n          </Section2>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <Section3>\r\n        <BannerItems>\r\n        </BannerItems>\r\n      </Section3>\r\n      <Footer />\r\n    </>\r\n)}","C:\\laragon\\www\\loja-bim\\src\\store\\store.js",[],"C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\rootReducer.js",[],"C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\loading.reducer.js",["212"],"import { actionTypes } from '../actions/loading.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  msg: 'Loading...'\r\n}\r\n\r\nexport default (state = initialState, {type, data}) => {\r\n  switch (type){\r\n\r\n    case actionTypes.CHANGE:\r\n      return {...state, ...data}\r\n\r\n      default:\r\n        return state\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\loading.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\components\\index.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\components\\Loading.js",["213"],"import React from 'react';\r\nimport { Typpgraphy, Modal, CircularProgress, Typography } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeLoading } from '../../store/actions/loading.action';\r\n\r\nexport default function Loading(){\r\n\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(state => state.Loading);\r\n\r\n  return (\r\n    <Modal \r\n      open={loading.open}\r\n      onClose={()=> dispatch( changeLoading({open: false}))}\r\n      className='d-flex justify-content-center align-items-center h-100'\r\n    >\r\n      <div className='bg-white d-flex align-items-center rounded-lg p-3 ontline-none'>\r\n        <Typography variant='subtitle1'>Carregando...</Typography>\r\n        <CircularProgress size={50} className='ml-5'/>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\notify.reducer.js",["214"],"import { actionTypes } from '../actions/notify.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  horizontal: 'center',\r\n  vertical: 'top',\r\n  class: 'success',\r\n  time: 3000,\r\n  msg: 'Notification!'\r\n}\r\n\r\nexport default (state = initialState, {type, data}) => {\r\n  switch (type){\r\n\r\n    case actionTypes.CHANGE:\r\n      return {...state, ...data}\r\n\r\n      default:\r\n        return state\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\notify.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\components\\Notify.js",[],"C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\alert.reducer.js",["215"],"import { actionTypes } from '../actions/alert.action';\r\n\r\nconst initialState = {\r\n  open: false,\r\n  class: 'success',\r\n  time: 3000,\r\n  msg: 'Alert!'\r\n}\r\n\r\nexport default (state = initialState, {type, data}) => {\r\n  switch (type){\r\n\r\n    case actionTypes.CHANGE:\r\n      return {...state, ...data}\r\n\r\n      default:\r\n        return state\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\alert.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\components\\Alert.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\components\\Confirm.js",[],"C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\auth.reducer.js",["216"],"import { actionTypes } from '../actions/auth.action';\r\n\r\nconst initialState = {\r\n  credentials: {\r\n    email: '',\r\n    password: ''\r\n  },\r\n  success: false\r\n}\r\n\r\nexport default (state = initialState, {type, data}) => {\r\n  switch (type){\r\n\r\n    case actionTypes.CHANGE:\r\n      return {...state, credentials: {\r\n        ...state.credentials,\r\n        ...data\r\n      }}\r\n\r\n    case actionTypes.SUCCESS:\r\n      return {...state, success: data}\r\n\r\n      default:\r\n        return state\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\auth.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\auth\\index.js",["217","218","219"],"import { useState, useEffect } from 'react';\r\nimport {TextField, Button } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeAuth, loginAuth } from '../../store/actions/auth.action';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\r\nimport Register from '../register';\r\nimport { style } from './style.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '0px',\r\n    borderRadius: '5px',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function Auth(props){\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect( ()=>{\r\n\r\n    if (props.opened === undefined){\r\n      //faz nada kkk\r\n    } else if (props.opened === true) {\r\n      setOpen(true);\r\n    }\r\n  },[props.opened] )\r\n\r\n  const dispatch = useDispatch();\r\n  const { credentials, success } = useSelector(state => state.Auth);\r\n\r\n  async function handleLogin(){\r\n\r\n    //Verifica se há token de acesso, se sim, o apaga \r\n    if (localStorage.getItem('access_token') !== null) {\r\n      localStorage.removeItem('access_token');\r\n    }\r\n\r\n    //Dispacha as credenciais ao reducer\r\n    await dispatch( loginAuth(credentials) );\r\n\r\n    //Cas haja um novo token de acesso, quer dizer quo login foi bem sucedido. Feito isso, a tela de login é fechada\r\n    if (localStorage.getItem('access_token') !== null) {\r\n      setOpen(false);\r\n    }\r\n\r\n  }\r\n\r\n  //Abertura e fechamento do signUp\r\n  const [signUpOpen, setSignUpOpen] = useState();\r\n\r\n  \r\n  return(\r\n    <>\r\n      <Register open={signUpOpen} />\r\n      <Modal show={open} onHide={handleClose}>\r\n        <Modal.Header closeButton>    \r\n          <h2 className='pl-5'>\r\n            Faça o login\r\n          </h2>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <TextField\r\n                label='Email'\r\n                type='email'\r\n                autoComplete='email'\r\n                margin='normal'\r\n                fullWidth\r\n                value={credentials.email}\r\n                onChange={text => dispatch(changeAuth({email: text.target.value}))}\r\n                />  \r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <TextField\r\n                label='Senha'\r\n                type='password'\r\n                margin='normal'\r\n                fullWidth\r\n                value={credentials.password}\r\n                onChange={text => dispatch(changeAuth({password: text.target.value}))}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                variant='contained'\r\n                color='primary'\r\n                fullWidth\r\n                size='large'\r\n                className='mt-4 mb-4'\r\n                onClick={ () => handleLogin() }\r\n                >\r\n                  Logar\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Container>\r\n            <Row>\r\n              <Col\r\n                className='d-flex justify-content-center cadastre-se'\r\n                onClick={\r\n                  (e) => { \r\n                    setSignUpOpen(true);\r\n                    setTimeout(()=>{setSignUpOpen()}, 3000);\r\n                  }\r\n                } \r\n              >\r\n                Não tem conta? Cadastre-se!\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )}","C:\\laragon\\www\\loja-bim\\src\\config\\Http.js",[],"C:\\laragon\\www\\loja-bim\\src\\config\\App.js",[],"C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\register.reducer.js",["220"],"import { actionTypes } from '../actions/register.action';\r\n\r\nconst initialState = {\r\n  user: {\r\n    'name': '',\r\n    'email': '',\r\n    'password': '',\r\n    'cpf': '',\r\n    'tel': '',\r\n    'conf_password': ''\r\n  },\r\n  success: false,\r\n  error: {}\r\n}\r\n\r\nexport default (state = initialState, { type, data }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          ...data\r\n        }\r\n      }\r\n    \r\n    case actionTypes.ERROR:\r\n      return {\r\n        ...state,\r\n        error: {...data}\r\n      }\r\n\r\n    case actionTypes.SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: data\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\register.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\register\\index.js",["221","222","223"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeRegister, register } from '../../store/actions/register.action';\r\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\r\nimport { style } from './style.css';\r\nimport { mask, unMask } from 'remask';\r\n\r\nexport default function Register(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, error, success } = useSelector(state => state.Register);\r\n\r\n  //Abertura e fechamento do modal\r\n  const [open, setOpen] = useState();\r\n\r\n  useEffect( ()=>{\r\n\r\n    if (props.open === undefined){\r\n      //faz nada kkk\r\n    } else if (props.open === true) {\r\n      setOpen(true);\r\n    }\r\n  },[props.open] );\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  //Conferência das senhas e valida o formulario\r\n  const [errorConfPassword, setErrorConfPassword] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if (user.password !== user.conf_password){\r\n      setErrorConfPassword(true);\r\n    } else {\r\n      setErrorConfPassword(false);\r\n    }\r\n  },[user.conf_password]);\r\n\r\n  useEffect(()=>{\r\n    if (user.password !== user.conf_password){\r\n      setErrorConfPassword(true);\r\n    } else {\r\n      setErrorConfPassword(false);\r\n    }\r\n  },[user.password]);\r\n\r\n  return (\r\n    <Modal show={open} onHide={handleClose} size='xl'>\r\n      <Modal.Header closeButton>\r\n        <h2>\r\n          Cadastre-se\r\n        </h2>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {error.name && true}\r\n                margin = 'normal'\r\n                label = 'Nome Completo'\r\n                value = {user.name}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ name: text.target.value }));\r\n                  error.name && delete error.name;\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.name && \r\n                <strong className='text-danger'>{error.name[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {error.cpf && true}\r\n                margin = 'normal'\r\n                label = 'Cpf'\r\n                value = {mask(user.cpf, ['999.999.999-99'])}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ cpf: unMask(text.target.value) }));\r\n                  error.cpf && delete error.cpf;\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.cpf && \r\n                <strong className='text-danger'>{error.cpf[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {error.email && true}\r\n                margin = 'normal'\r\n                label = 'Email'\r\n                value = {user.email}\r\n                type = 'email'\r\n                autoComplete = 'email'\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ email: text.target.value }));\r\n                  error.email && delete error.email\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.email && \r\n                <strong className='text-danger'>{error.email[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {error.tel && true}\r\n                margin = 'normal'\r\n                label = 'Telefone'\r\n                value = {mask(user.tel,['(99) 99999-9999'])}\r\n                type = 'text'\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ tel: unMask(text.target.value) }));\r\n                  error.tel && delete error.tel\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.tel && \r\n                <strong className='text-danger'>{error.tel[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {error.password && true}\r\n                margin = 'normal'\r\n                label = 'Senha'\r\n                type = 'password'\r\n                value = {user.password}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ password: text.target.value }));\r\n                  error.password && delete error.password;\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.password && \r\n                <strong className='text-danger'>{error.password[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {errorConfPassword && true}\r\n                margin = 'normal'\r\n                label = 'Confirme a Senha'\r\n                type = 'password'\r\n                value = {user.conf_password}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ conf_password: text.target.value }));\r\n                }}\r\n                fullWidth\r\n              />\r\n              {errorConfPassword && \r\n                <strong className='text-danger'>\r\n                  A senha digitada não é igual a primeira.\r\n                </strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                disabled={errorConfPassword}\r\n                variant = 'contained'\r\n                color = 'primary'\r\n                fullWidth\r\n                size = 'large'\r\n                className = 'mt-4 mb-4'\r\n                onClick = {() => dispatch( register(user) )}\r\n              >\r\n               Cadastrar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div\r\n                className='text-center logue-se'\r\n                onClick={(e)=>{handleClose()}}\r\n              >\r\n                Já tem conta? Faça o Login\r\n              </div>\r\n              {(success) && window.location.reload()}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\view\\header\\index.js",["224","225","226","227","228","229"],"import { Link } from \"react-router-dom\";\r\nimport style from \"./style.css\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { index } from '../../store/actions/me.action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport Cart from '../cart';\r\nimport { set_active } from '../../store/actions/cart.action';\r\nimport Auth from '../auth';\r\nimport { Navbar, Nav, Popover, OverlayTrigger, Button, ListGroup } from 'react-bootstrap';\r\nimport { changeShowItems } from '../../store/actions/showItems.action';\r\nimport Encomendas from '../encomendas';\r\nimport logont from '../../public/banners/logont.png';\r\n\r\nexport default function Header() {\r\n\r\n  const me = useSelector (state => state.Me);\r\n  const cart = useSelector(state => state.Cart);\r\n  const dispatch = useDispatch();\r\n\r\n  function indexCall () {\r\n    dispatch( index() );\r\n  }\r\n\r\n  useEffect( () => {\r\n    indexCall();\r\n  }, [me.NAME]);\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  }\r\n\r\n  //Seleção de categoria de itens\r\n  const showItems = useSelector(state => state.ShowItems);\r\n\r\n  //ABERTURA E FECHAMENTO DO LOGIN\r\n  const [opened, setOpened] = useState();\r\n\r\n  //Popover do login\r\n  const popover = (\r\n    \r\n      <Popover id=\"popover-basic\">\r\n        <Popover.Title as=\"h3\">Opções</Popover.Title>\r\n        <Popover.Content>\r\n          <ListGroup>\r\n            <Encomendas />\r\n            {/*<ListGroup.Item>Mudar senha</ListGroup.Item>*/}\r\n            <ListGroup.Item action onClick={logout}>\r\n              Logout\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Popover.Content>\r\n      </Popover>\r\n  );\r\n  \r\n  const Usuario = () => (\r\n    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n      <Button className='loginButton botao'>Olá, {me.NAME}</Button>\r\n    </OverlayTrigger>\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <Cart />\r\n      <Auth opened = {opened} />\r\n\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" className='navbar'>\r\n          <Navbar.Brand className='logo'>\r\n            <img id='logoNT' src={logont}>\r\n            </img>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbar\" />\r\n          <Navbar.Collapse id=\"navbar\" className='justify-content-around'>\r\n            <Nav>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(1))}}>\r\n                Camisas Slim\r\n              </Nav.Link>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(2))}}>\r\n                Camisas regata\r\n              </Nav.Link>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(3))}}>\r\n                Calçados\r\n              </Nav.Link>\r\n              <Nav.Link href='#' onClick={(e)=>{dispatch(changeShowItems(4))}}>\r\n                Calças & Bermudas\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link href='#'>\r\n                {(me.LOADING) ?\r\n                  <div className=\"d-flex jultify-content-center\">\r\n                    <Button className='botao'>\r\n                      <CircularProgress />\r\n                    </Button>\r\n                  </div>\r\n                  :\r\n                  <>{(me.NAME) ?\r\n                      <Usuario />                  \r\n                      :\r\n                      <Button\r\n                      className='loginButton botao'\r\n                      onClick={\r\n                        (e) => { \r\n                          setOpened(true);\r\n                          setTimeout(()=>{setOpened()}, 3000);\r\n                        }\r\n                      }>\r\n                        <PersonIcon fontSize='default'/>\r\n                        Login\r\n                      </Button>\r\n                    }\r\n                  </>\r\n                }\r\n              </Nav.Link>\r\n\r\n              <Nav.Link href='#'>\r\n                <Button\r\n                  className='botao'\r\n                  onClick={(e)=>{\r\n                    dispatch( set_active(true) );\r\n                  }\r\n                }>\r\n                  <ShoppingCartIcon fontSize='default'/> Carrinho\r\n                </Button>\r\n              </Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>  \r\n    </>\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\items.action.js",["230"],"import { Http } from '@material-ui/icons';\r\nimport { HttpAuth } from '../../config/Http';\r\n\r\nexport const actionTypes = {\r\n  INDEX_ITEMS: 'INDEX_ITEMS',\r\n  INDEX_LOADING: 'ITEMS_LOADING',\r\n  INDEX_PHOTO: 'ITEMS_PHOTO',\r\n  LOADING_PHOTO: 'LAOADING_PHOTO'\r\n}\r\n\r\nexport const index = (type) => dispatch => {\r\n\r\n  dispatch({\r\n    type: actionTypes.INDEX_LOADING,\r\n    payload: true\r\n  });\r\n\r\n  dispatch({\r\n    type: actionTypes.INDEX_ITEMS,\r\n    payload: []\r\n  });\r\n\r\n  return HttpAuth.get('/item/'+type)\r\n    .then( (response) => {\r\n\r\n      if(response !== undefined){\r\n\r\n        dispatch({\r\n          type: actionTypes.INDEX_ITEMS,\r\n          payload: response.data\r\n        });\r\n  \r\n        dispatch({\r\n          type: actionTypes.INDEX_LOADING,\r\n          payload: false\r\n        });\r\n\r\n      } else {\r\n\r\n        return ('algo deu errado.');\r\n\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nexport const photo = (id) => dispatch => {\r\n  return HttpAuth.get('item/['+ id +']/foto')\r\n    .then(  (response) => {\r\n\r\n      try {\r\n\r\n        dispatch({\r\n          type: actionTypes.INDEX_PHOTO,\r\n          payload: response.data\r\n        });\r\n\r\n      } catch(error) {\r\n\r\n        return('Produto sem foto.' + error);\r\n\r\n      }\r\n\r\n      dispatch({\r\n        type: actionTypes.LOADING_PHOTO,\r\n        payload: false\r\n      })\r\n    }\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\items.reducer.js",["231"],"import { actionTypes } from \"../actions/items.action\";\r\n\r\nconst initialState = {\r\n  ITEMS: [],\r\n  PHOTO: [],\r\n  LOADING: true,\r\n  LOADING_PHOTO: true\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n  switch (type) {\r\n    \r\n    case actionTypes.INDEX_ITEMS: \r\n      return {...state, ITEMS: payload}\r\n\r\n    case actionTypes.INDEX_LOADING:\r\n      return {...state, LOADING: payload}\r\n\r\n    case actionTypes.INDEX_PHOTO:\r\n      return {...state, PHOTO: [...state.PHOTO, payload]};\r\n\r\n    case actionTypes.LOADING_PHOTO:\r\n      return {...state, LOADING_PHOTO: payload}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\laragon\\www\\loja-bim\\src\\view\\items\\index.js",["232","233"],"import react, { useState, useEffect } from 'react';\r\nimport Header from '../header';\r\nimport { index } from '../../store/actions/items.action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function ItemEdit(props) {\r\n\r\n  const items = useSelector (state => state.Items);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  async function indexCall () {\r\n    await dispatch( index() );\r\n    await setLoading(false);\r\n  }\r\n\r\n  useEffect( ()=>{\r\n    indexCall();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n      {(isLoading) ?\r\n        <div className=\"d-flex jultify-content-center mt-5 pt-5\">\r\n          <CircularProgress />\r\n        </div>\r\n        :\r\n        <>{items}</>\r\n      }\r\n    </>\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\view\\me\\index.js",["234"],"import { useState, useEffect } from 'react';\r\nimport Header from '../header';\r\nimport { index } from '../../store/actions/me.action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function ItemEdit(props) {\r\n\r\n  const me = useSelector (state => state.Me);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const indexCall = () => {\r\n    dispatch( index() );\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect( ()=>{\r\n    indexCall();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n      {(isLoading) ?\r\n          <div className=\"d-flex jultify-content-center mt-5 pt-5\">\r\n            <CircularProgress />\r\n          </div>\r\n          :\r\n          <>{me}</>\r\n      }\r\n    </>\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\me.reducer.js",["235","236"],"import { actionTypes } from \"../actions/me.action\";\r\n\r\nconst initialState = {\r\n  NAME: false,\r\n  EMAIL: false,\r\n  ID: false,\r\n  LOADING: true\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n  switch (type) {\r\n    \r\n    case 'USER_DATA':\r\n      return {NAME: payload.name, EMAIL: payload.email, ID: payload.id, LOADING: false};\r\n\r\n    case 'NO_USER':\r\n        return {NAME: false, EMAIL: false, ID: false, LOADING: false};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\me.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\bannerItems\\index.js",["237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"import React, { useEffect, useState, useLayoutEffect } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { index, photo } from '../../store/actions/items.action';\r\nimport { style } from './style.css';\r\nimport ShowPhotos from '../showPhotos';\r\nimport { ButtonGroup, Button } from 'react-bootstrap';\r\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { changeNotify } from '../../store/actions/notify.action';\r\nimport { add_items, remove_items, get_cart } from '../../store/actions/cart.action';\r\nimport { SignalCellularNoSimOutlined } from '@material-ui/icons';\r\nimport tshrit from '../../public/icons/tshirt.png';\r\nimport sleevelessShirt from '../../public/icons/sleeveless-shirt.png';\r\nimport shorts from '../../public/icons/shorts.png';\r\nimport sneakers from '../../public/icons/sneakers.png';\r\n\r\nexport default function BannerItems(){\r\n\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(state => state.Items);\r\n  const showItems = useSelector(state => state.ShowItems);\r\n\r\n  //Seleçãode itens a ser mostrado\r\n  const [tipoItens, setTipoItens] = useState(0);\r\n\r\n\r\n  useEffect(()=>{\r\n    dispatch( index(tipoItens) );\r\n  },[tipoItens]);\r\n\r\n  useEffect(()=>{\r\n    setTipoItens(showItems.data);\r\n  },[showItems.data]);\r\n\r\n  function indexCall() {\r\n    dispatch( index(0) );\r\n  }\r\n\r\n  //Definidor de width da tela em tempo real\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setWidth(window.innerWidth);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n\r\n  //!Abertura de itens\r\n\r\n  useEffect (() => {\r\n    if (!items.LOADING){\r\n\r\n      let items_id = [];\r\n\r\n      for(let i = 0; i < items.ITEMS.length; i = i + 1 ) {\r\n\r\n        if (items.ITEMS[i].id !== undefined){\r\n          items_id.push(items.ITEMS[i].id);\r\n        }\r\n      }\r\n\r\n      dispatch( photo( items_id ) );\r\n\r\n      setQtdItens(items.ITEMS.length);\r\n\r\n    }\r\n  }, [items.LOADING]);\r\n\r\n  useEffect( () => {\r\n    indexCall();\r\n  }, []);\r\n\r\n  //input de tamanho e retorno\r\n  const [tamanho, setTamanho] = useState(undefined);\r\n\r\n  const handleChange = (event) => {\r\n    setTamanho(event.target.value);\r\n  };\r\n\r\n  const handleOpen = (id, desc, preco, tipo) => {\r\n    setOpen(true);\r\n    setItem({ id: id,\r\n              desc: desc,\r\n              preco: preco,\r\n              tipo: tipo\r\n            });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function tamanhoSel(tipo){\r\n\r\n    //Tipos de vestimenta:\r\n    //  1 - Camisa Slim (P ao XG)\r\n    //  2 - Camisa Regatas (M ao XXG)\r\n    //  3 - Chinelo (37 ao 43)\r\n    //  4 - Bermudas e calças (P ao G)\r\n    if (tipo !== 3){\r\n      return (<>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">TAMANHO</FormLabel>\r\n          <RadioGroup aria-label=\"tamanho\" name=\"tamanho\" value={tamanho} onChange={handleChange}>\r\n            \r\n          { tipo === 1 && <>\r\n              <FormControlLabel value=\"p\" control={<Radio />} label=\"P\" />\r\n            </>}\r\n            <FormControlLabel value=\"m\" control={<Radio />} label=\"M\" />\r\n            <FormControlLabel value=\"g\" control={<Radio />} label=\"G\" />\r\n            { tipo === 1 && <>\r\n              <FormControlLabel value=\"xg\" control={<Radio />} label=\"XG\" />\r\n            </>}\r\n            { tipo === 2 && <>\r\n              <FormControlLabel value=\"xxg\" control={<Radio />} label=\"XXG\" />\r\n            </>}\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </>);\r\n    } else {\r\n      return (<>\r\n        <FormControl>\r\n          <InputLabel id=\"tam-select\" displayEmpty='true'>TAMANHO</InputLabel>\r\n          <Select\r\n            labelId=\"tam-select\"\r\n            id=\"simple-select\"\r\n            value={tamanho}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={37} selected>37</MenuItem>\r\n            <MenuItem value={38}>38</MenuItem>\r\n            <MenuItem value={39}>39</MenuItem>\r\n            <MenuItem value={40}>40</MenuItem>\r\n            <MenuItem value={41}>41</MenuItem>\r\n            <MenuItem value={42}>42</MenuItem>\r\n            <MenuItem value={43}>43</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </>);\r\n    }\r\n  }\r\n\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const [item, setItem] = useState({ \r\n    id: null,\r\n    foto: null, \r\n    desc: null,\r\n    preco: null\r\n  });\r\n\r\n  //define o numero de itens carregados e sistema de paginação\r\n  const [indexItens, setIndexItens] = useState(0);\r\n  const [proximaPaginaButton, setProximaPaginaButton] = useState(false);\r\n  const [paginaAnteriorButton, setPaginaAnteriorButton] = useState(false);\r\n  const [qtdItens, setQtdItens] = useState(0);\r\n  const [pgAtual, setPgAtual] = useState(1);\r\n  const [numOfPages, setNumOfPages] = useState('');\r\n\r\n  let itensShow = items.ITEMS.slice(indexItens, indexItens + 15);\r\n\r\n  useEffect(()=>{\r\n    \r\n    let numPages = Math.ceil(qtdItens/15);\r\n    setNumOfPages(numPages);\r\n\r\n    if (pgAtual < numPages){\r\n      setProximaPaginaButton(false);\r\n    } else {\r\n      setProximaPaginaButton(true);\r\n    }\r\n\r\n    if (pgAtual <= 1){\r\n      setPaginaAnteriorButton(true);\r\n    } else {\r\n      setPaginaAnteriorButton(false);\r\n    }\r\n\r\n  },[qtdItens, pgAtual]);\r\n\r\n  function proximaPagina(){\r\n    setIndexItens(indexItens+15);\r\n    setPgAtual(pgAtual+1);\r\n\r\n  }\r\n\r\n  function paginaAnterior(){\r\n    setIndexItens(indexItens-15);\r\n    setPgAtual(pgAtual-1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container pt-5\">\r\n\r\n      <Modal\r\n        show={open}\r\n        onHide={handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {item.desc}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <div className='row d-flex align-items-center modalOpenedItem'>\r\n          <div className='col-md-6 d-flex align-items-center flex-row'>\r\n            <center className='photo-container'>\r\n              {\r\n                items.LOADING_PHOTO ? \r\n                  <CircularProgress/> \r\n                    : \r\n                  <ShowPhotos id={item.id} className='d-flex align-self-center'/>\r\n              }\r\n            </center>\r\n          </div>\r\n          <div className='col-md-6 d-flex flex-column align-items-center justify-content-around item-display'>\r\n            <div className='tamanho'>\r\n              {tamanhoSel(item.tipo)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal.Footer>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <center>\r\n                  <h3 className='preco'>\r\n                    R$ {item.preco}\r\n                  </h3>\r\n                </center>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <center>\r\n                  <Button variant=\"dark\"\r\n                    onClick={()=>{\r\n                      if (tamanho === undefined){\r\n                        dispatch( changeNotify({\r\n                          open: true,\r\n                          class: 'error',\r\n                          msg: 'Selecione um tamanho.'\r\n                        }));\r\n                      } else {\r\n                        dispatch( add_items(item.id, 1, item.foto, item.desc, item.preco, tamanho));\r\n                        setTamanho(undefined);\r\n                        handleClose();\r\n                      }\r\n                  }}\r\n                  >\r\n                    Adicionar ao carrinho\r\n                  </Button>\r\n                </center>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <div className=\"row justify-content-center titulo\">\r\n        <div className=\"col-auto\" onClick={(e)=>{setTipoItens(0)}}>\r\n          <h1 className='mb-4 titulo'>\r\n            {tipoItens === 0 && 'Últimas novidades'}\r\n            {tipoItens === 1 && 'Camisas Slim'}\r\n            {tipoItens === 2 && 'Camisas Street'}\r\n            {tipoItens === 3 && 'Calçados'}\r\n            {tipoItens === 4 && 'Bermudas e calças'}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-center\">\r\n        {items.LOADING ? <CircularProgress />\r\n        :\r\n        <>\r\n          {typeof(itensShow) === \"object\" ?\r\n            itensShow.map( (item) => \r\n              <div\r\n                key={item.id}\r\n                className='col-md-3 d-flex card flex-column justify-content-between'\r\n              >\r\n                <span \r\n                  onClick={(e)=>handleOpen(item.id, item.desc, item.preco, item.tipo)}\r\n                  className='apontador'\r\n                >\r\n                  <div className='row d-flex flex-row justify-content-center'>\r\n                      {\r\n                        items.LOADING_PHOTO ? <CircularProgress/> : <ShowPhotos id={item.id}/>\r\n                      }\r\n                  </div>\r\n                  <Row className='row desc d-flex flex-row'>\r\n                    <Col>\r\n                      <center>\r\n                        {item.desc}\r\n                      </center>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className='preco'>\r\n                    <center>\r\n                      R$ \r\n                      <span className='real'>\r\n                        {item.preco.split(\".\")[0]}\r\n                      </span>\r\n                      ,\r\n                      <span className='centavos'>\r\n                        {item.preco.split(\".\")[1]}\r\n                      </span>\r\n                    </center>\r\n                  </div>\r\n                </span>\r\n              </div>\r\n            )\r\n            :\r\n            <>\r\n              Não há itens nessa categoria.\r\n            </>\r\n          }\r\n        </>\r\n        }\r\n      </div>\r\n      <Container>\r\n        <Row>\r\n          <Col className='d-flex justify-content-center align-items-center p-4'>\r\n            <Button\r\n              variant='outline-dark'\r\n              size='lg'\r\n              onClick={()=>paginaAnterior()}\r\n              disabled={paginaAnteriorButton}\r\n              className='mr-2'\r\n              >\r\n              Página anterior\r\n            </Button>\r\n            <Button\r\n              variant='outline-dark'\r\n              size='lg'\r\n              onClick={()=>proximaPagina()}\r\n              disabled={proximaPaginaButton}\r\n              className='ml-2'\r\n            >\r\n              Próxima página\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <center className='numOfPages'>\r\n              Página {pgAtual} de {numOfPages}\r\n            </center>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\cart.reducer.js",["253","254","255","256","257","258"],"import { actionTypes } from '../actions/cart.action';\r\n\r\nconst initialState = {\r\n  ITEMS: [],\r\n  ACTIVE: null\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n  switch (type){\r\n\r\n    //REDUCER ADICIONAR ITEM DO CARRINHO\r\n    case actionTypes.ADD_ITEM:\r\n      let arr_items = state.ITEMS;\r\n      let items = state.ITEMS.findIndex( \r\n        item => item.id === payload.id && item.tamanho === payload.tamanho \r\n      );\r\n      let tam = payload.tamanho;\r\n\r\n      if(items < 0) {\r\n         \r\n        arr_items.push({\r\n          id: payload.id,\r\n          qtd: payload.qtd,\r\n          img: payload.img,\r\n          nome: payload.desc,\r\n          preco: payload.preco,\r\n          tamanho: tam\r\n        });\r\n        \r\n      } else {\r\n\r\n        state.ITEMS[items].qtd = state.ITEMS[items].qtd + 1;\r\n\r\n      }\r\n\r\n      return {...state, ITEMS:  arr_items}\r\n    //!REDUCER ADICIONAR ITEM DO CARRINHO\r\n    \r\n    //REDUCER REMOVER ITEM DO CARRINHO\r\n    case actionTypes.REMOVE_ITEM:\r\n      let remove_arr_items = state.ITEMS;\r\n      let remove_items = state.ITEMS.findIndex( \r\n        item => item.id == payload.id && item.tamanho == payload.tamanho \r\n      );\r\n\r\n      if(state.ITEMS[remove_items].qtd < 2) {\r\n        remove_arr_items.splice(remove_items, 1);\r\n      } else {\r\n        state.ITEMS[remove_items].qtd = state.ITEMS[remove_items].qtd - 1;\r\n      }\r\n\r\n      return {...state, ITEMS:  remove_arr_items}\r\n    //!REDUCER REMOVER ITEM DO CARRINHO\r\n\r\n    case actionTypes.SET_CART:\r\n      localStorage.removeItem('storeCart');\r\n      localStorage.setItem('storeCart', JSON.stringify(state.ITEMS));\r\n\r\n    case actionTypes.GET_CART:\r\n      let cart = localStorage.getItem('storeCart');\r\n      if (cart !== null) {\r\n        return {...state, ITEMS: JSON.parse(cart)}\r\n      }\r\n\r\n    case actionTypes.SET_ACTIVE:\r\n\r\n      if (state.ACTIVE !== null) {\r\n        if (state.ACTIVE === false) {\r\n          return {...state, ACTIVE: true}\r\n        } else if (state.ACTIVE === true) {\r\n          return {...state, ACTIVE: false}\r\n        }\r\n      } else if (state.ACTIVE === false ) {\r\n        return {...state, ACTIVE: true}\r\n      } else if (state.ACTIVE === null) {\r\n        if (payload) {\r\n          return {...state, ACTIVE: true}\r\n        } else if (!payload) {\r\n          return {...state, ACTIVE: false}\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n    default:\r\n      return state\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\cart.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\view\\cart\\index.js",["259","260","261","262","263"],"import React, { useState, useEffect } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Modal, Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { get_cart, set_active } from '../../store/actions/cart.action';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { style } from './style.css'; \r\nimport { remove_items, add_items } from '../../store/actions/cart.action';\r\nimport ShowPhotos from '../showPhotos';\r\nimport Endereco from './endereco';\r\nimport { index } from '../../store/actions/me.action';\r\nimport { changeNotify } from '../../store/actions/notify.action';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    overflow: 'auto',\r\n    maxHeight: '80%',\r\n    paddingTop: '34%',\r\n    paddingBottom: '1%',\r\n    marginTop: '5%'\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function Cart(props){\r\n\r\n  const items = useSelector(state => state.Items);\r\n  const me = useSelector (state => state.Me);\r\n\r\n  //TOTAL DO CARRINHO\r\n  let total = 0;\r\n  const adicionarTotal = (preco, qtd) => {\r\n    total = total + (parseFloat(preco) * parseFloat(qtd));\r\n  }\r\n\r\n  const convertTotal = (num) => {\r\n    return num.toLocaleString(\r\n      'pt-BR', { style: 'currency', currency: 'BRL' }\r\n    );\r\n  }\r\n  //!TOTAL DO CARRINHO\r\n\r\n  //CART REDUCER\r\n  const cart = useSelector(state => state.Cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const indexCall = ()=>{\r\n    dispatch( get_cart() );\r\n  };\r\n\r\n  useEffect(()=>{\r\n    indexCall();\r\n  },[]);\r\n  //!CART REDUCER\r\n\r\n  const classes = useStyles();\r\n\r\n  //Mecanismo de abertura e fechamento do carrinho\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    if (cart.ACTIVE === true) {\r\n      dispatch( set_active(false) );\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (cart.ACTIVE === true){\r\n      handleOpen();\r\n    } else if (cart.ACTIVE === false){\r\n      handleClose();\r\n    }\r\n  },[cart.ACTIVE]);\r\n\r\n  function payment(){\r\n\r\n    if (me.NAME) {\r\n\r\n      setEnderecoOpen(true);\r\n      \r\n    } else {\r\n\r\n      dispatch( changeNotify({\r\n        open: true,\r\n        class: 'error',\r\n        msg: 'Faça o login para concluir a sua compra.'\r\n      }));\r\n\r\n    }\r\n  }\r\n\r\n  //Função que verifica se o item é o último listado. Caso não seja adiciona um separador.\r\n  let indexAtual = 0;\r\n\r\n  function separador(indexTotal){\r\n    indexAtual++;\r\n    if (indexAtual < indexTotal){\r\n      return (<hr />);\r\n    }\r\n  }\r\n\r\n  const [enderecoOpen, setEnderecoOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Endereco id={me.ID} open={enderecoOpen}/>\r\n      <Modal\r\n        show={open}\r\n        onHide={handleClose}\r\n        size='xl'\r\n        className='modal-content-cart'\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h2>\r\n            Carrinho\r\n          </h2>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>\r\n              {cart.ITEMS.map( (item) =>\r\n                <div key={item.id}>\r\n                  <Row>\r\n                    <Col className='d-flex justify-content-center'>\r\n                      {\r\n                        items.LOADING_PHOTO ?\r\n                        <CircularProgress />\r\n                          :\r\n                        <ShowPhotos id={item.id} cart='true' />\r\n                      }\r\n                    </Col>\r\n                    <Col>\r\n                      <div className='namePrice-container'>\r\n                        <div className='name-container'>\r\n                          <h4>\r\n                            {item.nome}\r\n                          </h4>\r\n                        </div>\r\n                        <Row className='name-container'>\r\n                          <Col className='pt-3'>\r\n                            <small>\r\n                              Tamanho: {item.tamanho}\r\n                            </small>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className='priceQtd-container'>\r\n                          <Col>\r\n                            <span>\r\n                              <AddIcon\r\n                              className='addButton'\r\n                              onClick={ (e) => dispatch( add_items(item.id, item.qtd, item.img, item.desc, item.preco, item.tamanho) ) }\r\n                              />\r\n                              {item.qtd}\r\n                              <RemoveIcon\r\n                                className='removeButton'\r\n                                onClick={ (e) => dispatch( remove_items(item.id, item.tamanho) ) }\r\n                              />\r\n                            </span>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <h3>\r\n                              <span className='itemPreco'>R$ {item.preco}</span>\r\n                            </h3>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  {adicionarTotal(item.preco, item.qtd)}\r\n                  {\r\n                    //Função que verifica se é o último item listado. Se não for, adiciona o separador.\r\n                    separador(cart.ITEMS.length)\r\n                  }\r\n                </div>\r\n              )}\r\n              {total === 0 && \r\n                <div className='row d-flex'>\r\n                  <div className='col-12 d-flex justify-content-center'>\r\n                    <h6>\r\n                      Carrinho vazio\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {total !== 0 &&\r\n          <Container>\r\n            <Row>\r\n              <Col className='d-flex justify-content-center align-items-center'>\r\n                <span>\r\n                  <h3>\r\n                    {convertTotal(total)}\r\n                  </h3>\r\n                </span>\r\n              </Col>\r\n              <Col className='d-flex justify-content-center'>\r\n                <span>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    size=\"lg\"\r\n                    onClick={ (e) => {payment()} }\r\n                  >\r\n                    Confirmar endereço de entrega\r\n                  </Button>\r\n                </span>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          }\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}","C:\\laragon\\www\\loja-bim\\src\\view\\footer\\index.js",["264","265","266"],"import style from './style.css';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport { changeProblem, enviarProblema } from '../../store/actions/problem.action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { mask, unMask } from 'remask';\r\nexport default function Footer() {\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const { problem, error, success } = useSelector (state => state.Problem);\r\n\r\n  return (\r\n    <>\r\n      <div className='container-fluid footer-container'>\r\n        <div class='row d-flex justify-content-center p-3 title'>\r\n          <small>\r\n            Todos os direitos reservados.\r\n          </small>\r\n        </div>\r\n        <div class='row'>\r\n          <div class='col-md-6'>\r\n            <div className='row'>\r\n              <div class='col-12 d-flex justify-content-center p-3 title'>\r\n                <h3>\r\n                  Contato\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div className='row'>\r\n              <div class='col-md-12 d-flex justify-content-center p-3'>\r\n                <div class='col-4 d-flex justify-content-end'>\r\n                  <WhatsAppIcon /> \r\n                </div>\r\n                <div class='col-8 d-flex justify-content-center'>\r\n                  +55 21 97018-7035\r\n                </div>\r\n              </div>\r\n                <div class='col-12 d-flex justify-content-center p-3'>\r\n                  <div class='col-4 d-flex justify-content-end'>\r\n                    <EmailIcon />\r\n                  </div>\r\n                  <div class='col-8 d-flex justify-content-center'>\r\n                    nozestrump@gmail.com\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <div class='col-md-6'>\r\n            <div className='row'>\r\n              <div className='col-12 d-flex justify-content-center p-3 title'>\r\n                <h3>\r\n                 Links úteis\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div class='row'>\r\n              <div class='col-12'>\r\n                <center>\r\n                  <a onClick={handleShow} id='link-report'>\r\n                    Relate seu problema ou bug\r\n                  </a>\r\n                </center>\r\n                <Modal show={show} onHide={handleClose}>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>Relatar problema com pedido</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <Form.Group\r\n                      className=\"mb-3\"\r\n                      controlId=\"informacoes\"\r\n                    >\r\n                      <Form.Label>E-mail</Form.Label>\r\n                        <Form.Control\r\n                          error = {error.email && true}\r\n                          margin = 'normal'\r\n                          label = 'Email'\r\n                          value = {problem.email}\r\n                          type = 'email'\r\n                          autoComplete = 'email'\r\n                          onChange = {text => {\r\n                            dispatch( changeProblem({ email: text.target.value }));\r\n                            error.email && delete error.email\r\n                          }}\r\n                          fullWidth\r\n                        />\r\n                      {error.email && \r\n                        <strong className='text-danger'>{error.email[0]}</strong>\r\n                      }\r\n                      <br/>\r\n                      <Form.Label>Nome</Form.Label>\r\n                      <Form.Control\r\n                        error = {error.nome && true}\r\n                        margin = 'normal'\r\n                        label = 'Nome'\r\n                        value = {problem.nome}\r\n                        type = 'nome'\r\n                        autoComplete = 'name'\r\n                        onChange = {text => {\r\n                          dispatch( changeProblem({ nome: text.target.value }));\r\n                            error.nome && delete error.nome\r\n                          }}\r\n                        fullWidth\r\n                        />\r\n                      {error.nome && \r\n                        <strong className='text-danger'>{error.nome[0]}</strong>\r\n                      }\r\n                      <br/>\r\n                      <Form.Label>Telefone</Form.Label>\r\n                      <Form.Control\r\n                        error = {error.telefone && true}\r\n                        margin = 'normal'\r\n                        label = 'Telefone'\r\n                        value = {mask(problem.telefone,['(99) 99999-9999'])}\r\n                        type = 'telefone'\r\n                        autoComplete = 'telephone'\r\n                        onChange = {text => {\r\n                          dispatch( changeProblem({ \r\n                            telefone: unMask(text.target.value) \r\n                          }));\r\n                            error.telefone && delete error.telefone\r\n                          }}\r\n                        fullWidth\r\n                        />\r\n                      {error.telefone && \r\n                        <strong className='text-danger'>{error.telefone[0]}</strong>\r\n                      }\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      className=\"mb-3\"\r\n                      controlId=\"exampleForm.ControlTextarea1\"\r\n                    >\r\n                      <Form.Label>Relate seu problema</Form.Label>\r\n                      <Form.Control\r\n                        error = {error.problema && true}\r\n                        margin = 'normal'\r\n                        label = 'Problema'\r\n                        value = {problem.problema}\r\n                        type = 'problema'\r\n                        rows = '3'\r\n                        as=\"textarea\"\r\n                        autoComplete = 'problema'\r\n                        onChange = {text => {\r\n                          dispatch( changeProblem({ problema: text.target.value }));\r\n                            error.problema && delete error.problema\r\n                          }}\r\n                        fullWidth\r\n                        />\r\n                      {error.problema && \r\n                        <strong className='text-danger'>{error.problema[0]}</strong>\r\n                      }\r\n                    </Form.Group>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button \r\n                      variant=\"primary\"\r\n                      onClick={(e)=>(dispatch( enviarProblema(problem) )) }\r\n                    >\r\n                      Enviar\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","C:\\laragon\\www\\loja-bim\\src\\view\\showPhotos\\index.js",["267","268","269"],"C:\\laragon\\www\\loja-bim\\src\\view\\cart\\endereco\\index.js",["270","271","272","273","274","275","276","277","278","279"],"import React,{ useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Container, Row, Col } from 'react-bootstrap';\r\nimport { HttpAuth } from '../../../config/Http';\r\nimport Axios from 'axios';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { index } from '../../../store/actions/me.action';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeNotify } from '../../../store/actions/notify.action';\r\n\r\nexport default function Endereco(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const me = useSelector (state => state.Me);\r\n\r\n  //Mecanismo de abertura e fechamento do modal\r\n  const [open, setOpen] = useState(false);\r\n\r\n  //Mecanismo para testar sucesso na função de CEP\r\n  const [consultaCepIsSucceful, setConsultaCepIsSucceful] = useState(''); \r\n\r\n  //Constantes para endereço\r\n  const [qtdEndereco, setQtdEndereco] = useState(1);\r\n  const [endereco, setEndereco] = useState({\r\n    rua: '',\r\n    numero: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    cep: '',\r\n    cidade: '',\r\n    estado: '',\r\n    referencia: ''\r\n  });\r\n\r\n  //valores dos inputs\r\n  const [rua, setRua] = useState('');\r\n  const [numero, setNumero] = useState('');\r\n  const [complemento, setComplemento] = useState('');\r\n  const [bairro, setBairro] = useState('');\r\n  const [cep, setCep] = useState('');\r\n  const [cidade, setCidade] = useState('');\r\n  const [estado, setEstado] = useState('');\r\n  const [referencia, setReferencia] = useState('');\r\n  const [sn, setSn] = useState(false);\r\n  const [disableButton, setDisableButton] = useState(false);\r\n\r\n  const [cepLoading, setCepLoading] = useState(true);\r\n  const [cepIsValid, setCepIsValid] = useState(undefined);\r\n  const [cepIsInvalid, setCepIsInvalid] = useState(undefined);\r\n  const [enderecoSetadoByCep, setEnderecoSetadoByCep] = useState({\r\n    rua: undefined,\r\n    bairro: undefined,\r\n    cidade: undefined,\r\n    estado: undefined\r\n  });\r\n\r\n  let ruaChecked = undefined;\r\n  let bairroChecked = undefined;\r\n  let cidadeChecked = undefined;\r\n  let estadoChecked = undefined;\r\n\r\n  const [pac, setPac] = useState(0);\r\n  const [sedex, setSedex] = useState(0);\r\n  const [tipoEnvio, setTipoEnvio] = useState('pac');\r\n  const [freteLoading, setFreteLoading] = useState(true);\r\n\r\n  const setClickSn = (e)=>{\r\n    if (sn === false){\r\n      setSn(true);\r\n    } else {\r\n      setSn(false);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setRua(endereco.rua);\r\n    setNumero(endereco.numero);\r\n    setComplemento(endereco.complemento);\r\n    setBairro(endereco.bairro);\r\n    setCep(endereco.cep);\r\n    setCidade(endereco.cidade);\r\n    setEstado(endereco.estado);\r\n    setReferencia(endereco.referencia);\r\n  },[endereco]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (sn === true) {\r\n      setNumero('');\r\n    }\r\n  },[sn])\r\n\r\n  useEffect(()=>{\r\n    if (props.open){\r\n      setOpen(true);\r\n      buscaEndereco();\r\n    }\r\n  },[props.open]);\r\n\r\n  //Função de consulta o cep\r\n  function consultaCep(){\r\n    HttpAuth.post('frete', {\r\n      cep: cep\r\n    }).then(\r\n      (response) => {\r\n        \r\n        if (response === undefined || response === '' || response === [] || response.data[0].price === 0 || response.data[1].price === 0){\r\n\r\n          if (consultaCepIsSucceful === ''){\r\n            setConsultaCepIsSucceful(true);\r\n          } else {\r\n            setConsultaCepIsSucceful(!consultaCepIsSucceful);\r\n          }\r\n          \r\n\r\n        } else {\r\n\r\n          setSedex(response.data[0]);\r\n          setPac(response.data[1]);\r\n          setFreteLoading(false);\r\n          setConsultaCepIsSucceful('');\r\n\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Sempre que a função de cnsulta cep for má sucedida, será executada novamente\r\n  useEffect(()=>{\r\n    if (consultaCepIsSucceful !== ''){\r\n      consultaCep();\r\n    }\r\n  },[consultaCepIsSucceful]);\r\n\r\n  useEffect(()=>{\r\n    setCepIsValid(undefined);\r\n    setCepIsInvalid(undefined);\r\n\r\n    if (cep !== undefined){\r\n      if (cep.length === 8){\r\n\r\n        //consulta local do cep\r\n\r\n        setCepLoading(true);\r\n        \r\n        const linkCep = 'https://viacep.com.br/ws/'+cep+'/json/unicode/';\r\n\r\n        Axios.get(linkCep).then(response => {\r\n          if(response.data.cep === undefined){\r\n            setCepIsInvalid(true);\r\n          } else {\r\n\r\n            //consulta o frete\r\n\r\n            setFreteLoading(true);\r\n\r\n            consultaCep();\r\n\r\n            setCepIsValid(true);\r\n            setEndereco({\r\n              rua: response.data.logradouro,\r\n              numero: numero,\r\n              complemento: complemento,\r\n              bairro: response.data.bairro,\r\n              cep: cep,\r\n              cidade: response.data.localidade,\r\n              estado: response.data.uf,\r\n              referencia: referencia\r\n            })\r\n            \r\n            if (response.data.logradouro !== undefined || response.data.logradouro !== ''){\r\n              ruaChecked = true;\r\n            } else {\r\n              ruaChecked = false;\r\n            }\r\n\r\n            if (response.data.bairro !== undefined || response.data.bairro !== ''){\r\n              bairroChecked = true;\r\n            } else {\r\n              bairroChecked = false;\r\n            }\r\n\r\n            if (response.data.localidade !== undefined || response.data.localidade !== ''){\r\n              cidadeChecked = true;\r\n            } else {\r\n              cidadeChecked = false;\r\n            }\r\n\r\n            if (response.data.uf !== undefined || response.data.uf !== ''){\r\n              estadoChecked = true;\r\n            } else {\r\n              estadoChecked = false;\r\n            }\r\n\r\n            setEnderecoSetadoByCep({\r\n              rua: ruaChecked,\r\n              bairro: bairroChecked,\r\n              cidade: cidadeChecked,\r\n              estado: estadoChecked\r\n            });\r\n\r\n          }\r\n\r\n          setCepLoading(false);\r\n        })\r\n        \r\n      }\r\n    }\r\n\r\n    \r\n  },[cep])\r\n\r\n  function buscaEndereco (){\r\n    HttpAuth.get('cliente/'+props.id+'/endereco').then(\r\n      (response) => {\r\n        \r\n        if (typeof response.data.numero !== 'undefined') {\r\n\r\n          setQtdEndereco(response.data.length);\r\n\r\n          setEndereco({\r\n            rua: rua,\r\n            numero: response.data[qtdEndereco-1].numero,\r\n            complemento: response.data[qtdEndereco-1].complemento,\r\n            bairro: bairro,\r\n            cep: response.data[qtdEndereco-1].cep,\r\n            cidade: cidade,\r\n            estado: estado,\r\n            referencia: response.data[qtdEndereco-1].referencia\r\n          });\r\n        } else {\r\n          setCepLoading(false);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  //Payment call (pagseguro)\r\n  function payment(){\r\n\r\n    setFreteLoading(true);\r\n\r\n    let cart = localStorage.getItem('storeCart');\r\n\r\n    if ((typeof cart !== 'undefined' || cart !== '' || cart !== [])){\r\n        \r\n      let itemsIdQtd = [];\r\n\r\n      //LOGICA DE ADICINAR OS IDS DO CARRINHO\r\n      for (let i = 0; i < JSON.parse(cart).length; i++){\r\n    \r\n        itemsIdQtd = [...itemsIdQtd, {\r\n          itemId: JSON.parse(cart)[i].id,\r\n          itemQuantity: JSON.parse(cart)[i].qtd,\r\n          itemTam: JSON.parse(cart)[i].tamanho\r\n        }];\r\n      }\r\n\r\n      let endereco = {\r\n        rua: rua,\r\n        numero: numero,\r\n        complemento: complemento,\r\n        bairro: bairro,\r\n        cep: cep,\r\n        cidade: cidade,\r\n        estado: estado,\r\n        referencia: referencia,\r\n        tipo: tipoEnvio\r\n      };\r\n        \r\n      localStorage.removeItem('storeCart');\r\n\r\n      const pedido = {\r\n        items: JSON.stringify(itemsIdQtd),\r\n        endereco: JSON.stringify(endereco)\r\n      };\r\n\r\n      HttpAuth.post('checkout', pedido).then(\r\n        (response) => {\r\n          window.location = response.data;\r\n        }\r\n      );\r\n\r\n    } else {\r\n\r\n      dispatch( changeNotify({\r\n        open: true,\r\n        class: 'error',\r\n        msg: 'Seu carrinho está vazio.'\r\n      }));\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    <Modal show={open} onHide={handleClose} size='xl'>\r\n        <Modal.Header closeButton>\r\n          <h2>\r\n            Endereço de entrega\r\n          </h2>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Form>\r\n                  <Form.Group controlId=\"endereco\">\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <Form.Label>Cep</Form.Label>\r\n                        <Form.Control \r\n                        size='sm'\r\n                        type=\"text\"\r\n                        placeholder=\"12345123\" \r\n                        value={cep}\r\n                        onChange={text => setCep(text.target.value)}\r\n                        disabled={cepLoading && true}\r\n                        isValid={cepIsValid}\r\n                        isInvalid={cepIsInvalid}\r\n                        />\r\n                        {\r\n                          cepLoading ? \r\n                            <CircularProgress/>\r\n                              :\r\n                            <Form.Text className=\"text-muted\">\r\n                              Caso não saiba seu cep: \r\n                              <a\r\n                                href='https://buscacepinter.correios.com.br/app/endereco/index.php'\r\n                              >\r\n                                Pesquise seu cep\r\n                              </a>\r\n                            </Form.Text>\r\n                        }\r\n                        \r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Form.Label>Rua</Form.Label>\r\n                        <Form.Control\r\n                          size='sm'\r\n                          type=\"text\"\r\n                          placeholder=\"Rua ciclano da silva\"\r\n                          value={rua}\r\n                          onChange={text => setRua(text.target.value)}\r\n                          disabled={enderecoSetadoByCep.rua}\r\n                        />\r\n                        <Form.Label>Número</Form.Label>\r\n                        <Form.Control\r\n                          size='sm'\r\n                          type=\"number\"\r\n                          placeholder=\"10\"\r\n                          value={numero}\r\n                          onChange={text => setNumero(text.target.value)}\r\n                          disabled={sn}\r\n                          \r\n                        />\r\n                        <Form.Check \r\n                          type=\"switch\"\r\n                          id=\"isSemNumero\"\r\n                          label=\"s/n\"\r\n                          value={sn}\r\n                          onClick={(e) => setClickSn()}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Form.Label>Complemento</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Ap 1001\"\r\n                      value={complemento}\r\n                      onChange={text => setComplemento(text.target.value)}\r\n                    />\r\n                    <Form.Label>Bairro</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Bairro das flores\"\r\n                      value={bairro}\r\n                      onChange={text => setBairro(text.target.value)}\r\n                      disabled={enderecoSetadoByCep.bairro}\r\n                    />\r\n                    <Form.Label>Cidade</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Cidade dos Anjos\"\r\n                      value={cidade}\r\n                      onChange={text => setCidade(text.target.value)}\r\n                      disabled={enderecoSetadoByCep.cidade}\r\n                    />\r\n                    <Form.Label>Estado / UF</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"BA\"\r\n                      value={estado}\r\n                      onChange={text => setEstado(text.target.value)}\r\n                      disabled={enderecoSetadoByCep.estado}\r\n                    />\r\n                    <Form.Label>Referencia</Form.Label>\r\n                    <Form.Control\r\n                      size='sm'\r\n                      type=\"text\"\r\n                      placeholder=\"Próximo à praça\"\r\n                      value={referencia}\r\n                      onChange={text => setReferencia(text.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <Form>\r\n                  <Row>\r\n                    <Col className='d-flex justify-content-center align-items-center'>\r\n                      <div key='tipoEnvio' className=\"mb-3\">\r\n                        <Form.Check\r\n                          type='radio'\r\n                          name='tipoEnvio'\r\n                          onClick={(e)=>setTipoEnvio('pac')}\r\n                          checked = {tipoEnvio === 'pac' ? true : false}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row>\r\n                        <Col>\r\n                          PAC: {freteLoading ? \r\n                            <CircularProgress />\r\n                              :\r\n                            <>\r\n                              {pac.price.toLocaleString('pt-br',{style: 'currency',currency: 'BRL'})}\r\n                            </>\r\n                          }\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <small>Entregue em {pac.deadline} dia(s).</small>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col className='d-flex justify-content-center align-items-center'>\r\n                      <div key='tipoEnvio' className=\"mb-3\">\r\n                        <Form.Check\r\n                          type='radio'\r\n                          name='tipoEnvio'\r\n                          onClick={(e)=>setTipoEnvio('sedex')}\r\n                          checked = {tipoEnvio === 'sedex' ? true : false}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row>\r\n                        <Col>\r\n                          Sedex: {freteLoading ? \r\n                            <CircularProgress />\r\n                              :\r\n                            <>\r\n                              {sedex.price.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}\r\n                            </>\r\n                          }\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <small>Entregue em {sedex.deadline} dia(s).</small>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n                <hr />\r\n                <Row>\r\n                  <Col className='d-flex justify-content-center'>\r\n                    <Button\r\n                      variant='success'\r\n                      onClick={(e)=>{payment()}}\r\n                      disabled={freteLoading}\r\n                      size='lg'\r\n                    >\r\n                    Confirmar endereço e iniciar pagamento\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Footer>\r\n      </Modal>\r\n  </>);\r\n}","C:\\laragon\\www\\loja-bim\\src\\view\\encomendas\\index.js",["280","281","282","283"],"import react, { useState, useEffect } from 'react';\r\nimport { Modal, ListGroup, Table } from 'react-bootstrap';\r\nimport { HttpAuth } from '../../config/Http';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { Axios } from 'axios';\r\nimport ConsultaEncomenda from './ConsultaEncomenda.js';\r\n\r\nexport default function Encomendas() {\r\n\r\n  //MODAL LOGIC\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //Carregamento dos pedidos\r\n  const [pedidos, setPedidos] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    HttpAuth.get('/encomenda').then( (response)=>{\r\n      if (typeof response !== undefined || typeof response === ''){\r\n        setPedidos(response.data);\r\n        \r\n        setLoading(false);\r\n      }\r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <ListGroup.Item action onClick={handleShow}>\r\n        Meus pedidos\r\n      </ListGroup.Item>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <h2>\r\n            Encomendas\r\n          </h2>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            loading ? \r\n              <CircularProgress />\r\n                :\r\n              pedidos === \"\" || pedidos === false ?\r\n                  <>Não há pedidos</>\r\n                :\r\n                  <Table striped bordered hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <td>\r\n                          Valor\r\n                        </td>\r\n                        <td>\r\n                          Itens\r\n                        </td>\r\n                        <td>\r\n                          Status\r\n                        </td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {pedidos == '' && \r\n                        <tr>\r\n                          <td colspan='3'>\r\n                            <center>\r\n                              Não há pedidos\r\n                            </center>\r\n                          </td>\r\n                        </tr>\r\n                      }\r\n                      {pedidos.map((pedido)=>(<>\r\n                        {\r\n                          <ConsultaEncomenda \r\n                            token={pedido.transaction_code}\r\n                          />\r\n                        }\r\n                      </>))}\r\n                    </tbody>\r\n                  </Table>\r\n          }\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}","C:\\laragon\\www\\loja-bim\\src\\view\\encomendas\\ConsultaEncomenda.js",["284","285","286","287","288"],"import react, { useState, useEffect } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { HttpAuth } from '../../config/Http';\r\nimport { ListGroup, Table } from 'react-bootstrap';\r\n\r\nexport default function ConsultaEncomenda(props) {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [responseToken, setResponseToken] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    HttpAuth.get('/consultaEncomenda/'+props.token).then( (response)=>{\r\n\r\n      if (typeof response !== undefined || typeof response === ''){\r\n        \r\n        setResponse(response);\r\n        switch (response.data.status) {\r\n          case '1':\r\n            setResponseToken('Completo');\r\n            break;\r\n\r\n          case '2':\r\n            setResponseToken('Aprovado');\r\n            break;\r\n          \r\n          case '3':\r\n            setResponseToken('Em análise');\r\n            break;\r\n          \r\n          case '4':\r\n            setResponseToken('Devolvido');\r\n            break;\r\n\r\n          case '5':\r\n            setResponseToken('Cancelado');\r\n            break;\r\n        }\r\n        console.log(response);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  },[]);\r\n\r\n  return(\r\n    <tr>\r\n      {loading ? \r\n        <CircularProgress/>\r\n          :\r\n        <>\r\n          <td>\r\n            {response.data.grossAmount}\r\n          </td>\r\n          <td>\r\n            <Table striped bordered hover>\r\n              {response.data.items !== undefined ? \r\n                response.data.items.item.map((item)=>(<>\r\n                  <tr>\r\n                    <td>\r\n                      {item.description}\r\n                    </td>\r\n                    <td>\r\n                      {item.quantity}\r\n                    </td>\r\n                    <td>\r\n                      {item.amount}\r\n                    </td>\r\n                  </tr>\r\n                </>))\r\n              :\r\n              <></>  \r\n              }\r\n            </Table>\r\n          </td>\r\n          <td>\r\n            {responseToken}\r\n          </td>\r\n        </>\r\n      }\r\n    </tr>\r\n  );\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\problem.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\problem.reducer.js",["289"],"import { actionTypes } from '../actions/problem.action';\r\n\r\nconst initialState = {\r\n  problem: {\r\n    'nome': '',\r\n    'email': '',\r\n    'telefone': '',\r\n    'problema': ''\r\n  },\r\n  success: false,\r\n  error: {}\r\n}\r\n\r\nexport default (state = initialState, { type, data }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE:\r\n      return {\r\n        ...state,\r\n        problem: {\r\n          ...state.problem,\r\n          ...data\r\n        }\r\n      }\r\n    \r\n    case actionTypes.ERROR:\r\n      return {\r\n        ...state,\r\n        error: {...data}\r\n      }\r\n\r\n    case actionTypes.SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: data\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","C:\\laragon\\www\\loja-bim\\src\\store\\actions\\showItems.action.js",[],"C:\\laragon\\www\\loja-bim\\src\\store\\reducers\\showItems.reducer.js",["290"],"import { actionTypes } from '../actions/showItems.action';\r\n\r\nconst initialState = {\r\n  data: 0\r\n};\r\n\r\nexport default (state = initialState, {type, data}) => {\r\n  switch (type){\r\n\r\n    case actionTypes.CHANGE:\r\n      return {data}\r\n\r\n      default:\r\n        return state\r\n  }\r\n}",{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"299","line":36,"column":7,"nodeType":"297","messageId":"298","endLine":36,"endColumn":16},{"ruleId":"295","severity":1,"message":"300","line":52,"column":7,"nodeType":"297","messageId":"298","endLine":52,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":8,"column":1,"nodeType":"303","endLine":17,"endColumn":2},{"ruleId":"295","severity":1,"message":"304","line":2,"column":10,"nodeType":"297","messageId":"298","endLine":2,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":12,"column":1,"nodeType":"303","endLine":21,"endColumn":2},{"ruleId":"301","severity":1,"message":"302","line":10,"column":1,"nodeType":"303","endLine":19,"endColumn":2},{"ruleId":"301","severity":1,"message":"302","line":11,"column":1,"nodeType":"303","endLine":26,"endColumn":2},{"ruleId":"295","severity":1,"message":"305","line":8,"column":10,"nodeType":"297","messageId":"298","endLine":8,"endColumn":15},{"ruleId":"295","severity":1,"message":"306","line":10,"column":7,"nodeType":"297","messageId":"298","endLine":10,"endColumn":16},{"ruleId":"295","severity":1,"message":"307","line":43,"column":24,"nodeType":"297","messageId":"298","endLine":43,"endColumn":31},{"ruleId":"301","severity":1,"message":"302","line":16,"column":1,"nodeType":"303","endLine":42,"endColumn":2},{"ruleId":"295","severity":1,"message":"305","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":15},{"ruleId":"308","severity":1,"message":"309","line":39,"column":5,"nodeType":"310","endLine":39,"endColumn":25,"suggestions":"311"},{"ruleId":"308","severity":1,"message":"312","line":47,"column":5,"nodeType":"310","endLine":47,"endColumn":20,"suggestions":"313"},{"ruleId":"295","severity":1,"message":"314","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":14},{"ruleId":"295","severity":1,"message":"305","line":2,"column":8,"nodeType":"297","messageId":"298","endLine":2,"endColumn":13},{"ruleId":"295","severity":1,"message":"315","line":20,"column":9,"nodeType":"297","messageId":"298","endLine":20,"endColumn":13},{"ruleId":"308","severity":1,"message":"316","line":29,"column":6,"nodeType":"310","endLine":29,"endColumn":15,"suggestions":"317"},{"ruleId":"295","severity":1,"message":"318","line":37,"column":9,"nodeType":"297","messageId":"298","endLine":37,"endColumn":18},{"ruleId":"319","severity":1,"message":"320","line":73,"column":13,"nodeType":"321","endLine":73,"endColumn":43},{"ruleId":"295","severity":1,"message":"322","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":14},{"ruleId":"301","severity":1,"message":"302","line":10,"column":1,"nodeType":"303","endLine":28,"endColumn":2},{"ruleId":"295","severity":1,"message":"323","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":13},{"ruleId":"308","severity":1,"message":"316","line":20,"column":6,"nodeType":"310","endLine":20,"endColumn":8,"suggestions":"324"},{"ruleId":"308","severity":1,"message":"316","line":20,"column":6,"nodeType":"310","endLine":20,"endColumn":8,"suggestions":"325"},{"ruleId":"295","severity":1,"message":"326","line":1,"column":10,"nodeType":"297","messageId":"298","endLine":1,"endColumn":21},{"ruleId":"301","severity":1,"message":"302","line":10,"column":1,"nodeType":"303","endLine":22,"endColumn":2},{"ruleId":"295","severity":1,"message":"305","line":5,"column":10,"nodeType":"297","messageId":"298","endLine":5,"endColumn":15},{"ruleId":"295","severity":1,"message":"327","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":21},{"ruleId":"295","severity":1,"message":"328","line":15,"column":8,"nodeType":"297","messageId":"298","endLine":15,"endColumn":22},{"ruleId":"295","severity":1,"message":"329","line":17,"column":10,"nodeType":"297","messageId":"298","endLine":17,"endColumn":20},{"ruleId":"295","severity":1,"message":"330","line":18,"column":8,"nodeType":"297","messageId":"298","endLine":18,"endColumn":14},{"ruleId":"295","severity":1,"message":"331","line":21,"column":21,"nodeType":"297","messageId":"298","endLine":21,"endColumn":33},{"ruleId":"295","severity":1,"message":"332","line":21,"column":35,"nodeType":"297","messageId":"298","endLine":21,"endColumn":43},{"ruleId":"295","severity":1,"message":"333","line":22,"column":10,"nodeType":"297","messageId":"298","endLine":22,"endColumn":37},{"ruleId":"295","severity":1,"message":"334","line":23,"column":8,"nodeType":"297","messageId":"298","endLine":23,"endColumn":14},{"ruleId":"295","severity":1,"message":"335","line":24,"column":8,"nodeType":"297","messageId":"298","endLine":24,"endColumn":23},{"ruleId":"295","severity":1,"message":"336","line":25,"column":8,"nodeType":"297","messageId":"298","endLine":25,"endColumn":14},{"ruleId":"295","severity":1,"message":"337","line":26,"column":8,"nodeType":"297","messageId":"298","endLine":26,"endColumn":16},{"ruleId":"308","severity":1,"message":"338","line":40,"column":5,"nodeType":"310","endLine":40,"endColumn":16,"suggestions":"339"},{"ruleId":"295","severity":1,"message":"340","line":51,"column":10,"nodeType":"297","messageId":"298","endLine":51,"endColumn":15},{"ruleId":"308","severity":1,"message":"341","line":80,"column":6,"nodeType":"310","endLine":80,"endColumn":21,"suggestions":"342"},{"ruleId":"308","severity":1,"message":"316","line":84,"column":6,"nodeType":"310","endLine":84,"endColumn":8,"suggestions":"343"},{"ruleId":"301","severity":1,"message":"302","line":8,"column":1,"nodeType":"303","endLine":88,"endColumn":2},{"ruleId":"344","severity":1,"message":"345","line":43,"column":25,"nodeType":"346","messageId":"347","endLine":43,"endColumn":27},{"ruleId":"344","severity":1,"message":"345","line":43,"column":55,"nodeType":"346","messageId":"347","endLine":43,"endColumn":57},{"ruleId":"348","severity":1,"message":"349","line":59,"column":5,"nodeType":"350","messageId":"351","endLine":63,"endColumn":8},{"ruleId":"348","severity":1,"message":"349","line":65,"column":5,"nodeType":"350","messageId":"351","endLine":81,"endColumn":8},{"ruleId":"348","severity":1,"message":"352","line":85,"column":5,"nodeType":"350","messageId":"353","endLine":86,"endColumn":19},{"ruleId":"295","severity":1,"message":"305","line":9,"column":10,"nodeType":"297","messageId":"298","endLine":9,"endColumn":15},{"ruleId":"295","severity":1,"message":"354","line":13,"column":10,"nodeType":"297","messageId":"298","endLine":13,"endColumn":15},{"ruleId":"308","severity":1,"message":"316","line":64,"column":5,"nodeType":"310","endLine":64,"endColumn":7,"suggestions":"355"},{"ruleId":"295","severity":1,"message":"356","line":67,"column":9,"nodeType":"297","messageId":"298","endLine":67,"endColumn":16},{"ruleId":"308","severity":1,"message":"357","line":89,"column":5,"nodeType":"310","endLine":89,"endColumn":18,"suggestions":"358"},{"ruleId":"295","severity":1,"message":"305","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":13},{"ruleId":"295","severity":1,"message":"307","line":17,"column":27,"nodeType":"297","messageId":"298","endLine":17,"endColumn":34},{"ruleId":"359","severity":1,"message":"360","line":66,"column":19,"nodeType":"321","endLine":66,"endColumn":60},{"ruleId":"295","severity":1,"message":"361","line":1,"column":17,"nodeType":"297","messageId":"298","endLine":1,"endColumn":26},{"ruleId":"295","severity":1,"message":"296","line":1,"column":28,"nodeType":"297","messageId":"298","endLine":1,"endColumn":36},{"ruleId":"295","severity":1,"message":"305","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":15},{"ruleId":"295","severity":1,"message":"354","line":6,"column":10,"nodeType":"297","messageId":"298","endLine":6,"endColumn":15},{"ruleId":"295","severity":1,"message":"362","line":13,"column":9,"nodeType":"297","messageId":"298","endLine":13,"endColumn":11},{"ruleId":"295","severity":1,"message":"363","line":44,"column":10,"nodeType":"297","messageId":"298","endLine":44,"endColumn":23},{"ruleId":"295","severity":1,"message":"364","line":44,"column":25,"nodeType":"297","messageId":"298","endLine":44,"endColumn":41},{"ruleId":"308","severity":1,"message":"365","line":100,"column":5,"nodeType":"310","endLine":100,"endColumn":17,"suggestions":"366"},{"ruleId":"308","severity":1,"message":"367","line":135,"column":5,"nodeType":"310","endLine":135,"endColumn":28,"suggestions":"368"},{"ruleId":"308","severity":1,"message":"369","line":174,"column":28,"nodeType":"370","endLine":174,"endColumn":32},{"ruleId":"308","severity":1,"message":"371","line":180,"column":31,"nodeType":"370","endLine":180,"endColumn":35},{"ruleId":"308","severity":1,"message":"372","line":186,"column":31,"nodeType":"370","endLine":186,"endColumn":35},{"ruleId":"308","severity":1,"message":"373","line":192,"column":31,"nodeType":"370","endLine":192,"endColumn":35},{"ruleId":"295","severity":1,"message":"323","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":13},{"ruleId":"295","severity":1,"message":"374","line":5,"column":10,"nodeType":"297","messageId":"298","endLine":5,"endColumn":15},{"ruleId":"375","severity":1,"message":"376","line":22,"column":64,"nodeType":"370","messageId":"377","endLine":22,"endColumn":66},{"ruleId":"344","severity":1,"message":"345","line":65,"column":32,"nodeType":"346","messageId":"347","endLine":65,"endColumn":34},{"ruleId":"295","severity":1,"message":"323","line":1,"column":8,"nodeType":"297","messageId":"298","endLine":1,"endColumn":13},{"ruleId":"295","severity":1,"message":"378","line":4,"column":10,"nodeType":"297","messageId":"298","endLine":4,"endColumn":19},{"ruleId":"375","severity":1,"message":"376","line":15,"column":64,"nodeType":"370","messageId":"377","endLine":15,"endColumn":66},{"ruleId":"379","severity":1,"message":"380","line":18,"column":9,"nodeType":"381","messageId":"382","endLine":38,"endColumn":10},{"ruleId":"308","severity":1,"message":"383","line":43,"column":5,"nodeType":"310","endLine":43,"endColumn":7,"suggestions":"384"},{"ruleId":"301","severity":1,"message":"302","line":14,"column":1,"nodeType":"303","endLine":40,"endColumn":2},{"ruleId":"301","severity":1,"message":"302","line":7,"column":1,"nodeType":"303","endLine":16,"endColumn":2},"no-native-reassign",["385"],"no-negated-in-lhs",["386"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'BannerRow' is assigned a value but never used.","'Items' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Typpgraphy' is defined but never used.","'style' is defined but never used.","'useStyles' is assigned a value but never used.","'success' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.password'. Either include it or remove the dependency array.","ArrayExpression",["387"],"React Hook useEffect has a missing dependency: 'user.conf_password'. Either include it or remove the dependency array.",["388"],"'Link' is defined but never used.","'cart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'indexCall'. Either include it or remove the dependency array.",["389"],"'showItems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Http' is defined but never used.","'react' is defined but never used.",["390"],["391"],"'actionTypes' is defined but never used.","'ButtonGroup' is defined but never used.","'FormHelperText' is defined but never used.","'makeStyles' is defined but never used.","'styled' is defined but never used.","'remove_items' is defined but never used.","'get_cart' is defined but never used.","'SignalCellularNoSimOutlined' is defined but never used.","'tshrit' is defined but never used.","'sleevelessShirt' is defined but never used.","'shorts' is defined but never used.","'sneakers' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["392"],"'width' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'items.ITEMS'. Either include them or remove the dependency array.",["393"],["394"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'index' is defined but never used.",["395"],"'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleClose'. Either include it or remove the dependency array.",["396"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'me' is assigned a value but never used.","'disableButton' is assigned a value but never used.","'setDisableButton' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'buscaEndereco'. Either include it or remove the dependency array.",["397"],"React Hook useEffect has a missing dependency: 'consultaCep'. Either include it or remove the dependency array.",["398"],"Assignments to the 'ruaChecked' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'bairroChecked' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'cidadeChecked' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'estadoChecked' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'Axios' is defined but never used.","valid-typeof","Invalid typeof comparison value.","invalidValue","'ListGroup' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'props.token'. Either include it or remove the dependency array.",["399"],"no-global-assign","no-unsafe-negation",{"desc":"400","fix":"401"},{"desc":"400","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"405","fix":"412"},{"desc":"405","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},"Update the dependencies array to be: [user.conf_password, user.password]",{"range":"422","text":"423"},{"range":"424","text":"423"},"Update the dependencies array to be: [indexCall, me.NAME]",{"range":"425","text":"426"},"Update the dependencies array to be: [indexCall]",{"range":"427","text":"428"},{"range":"429","text":"428"},"Update the dependencies array to be: [dispatch, tipoItens]",{"range":"430","text":"431"},"Update the dependencies array to be: [dispatch, items.ITEMS, items.LOADING]",{"range":"432","text":"433"},{"range":"434","text":"428"},{"range":"435","text":"428"},"Update the dependencies array to be: [cart.ACTIVE, handleClose]",{"range":"436","text":"437"},"Update the dependencies array to be: [buscaEndereco, props.open]",{"range":"438","text":"439"},"Update the dependencies array to be: [consultaCep, consultaCepIsSucceful]",{"range":"440","text":"441"},"Update the dependencies array to be: [props.token]",{"range":"442","text":"443"},[1138,1158],"[user.conf_password, user.password]",[1327,1342],[1069,1078],"[indexCall, me.NAME]",[590,592],"[indexCall]",[558,560],[1841,1852],"[dispatch, tipoItens]",[2727,2742],"[dispatch, items.ITEMS, items.LOADING]",[2793,2795],[1890,1892],[2390,2403],"[cart.ACTIVE, handleClose]",[2927,2939],"[buscaEndereco, props.open]",[3821,3844],"[consultaCep, consultaCepIsSucceful]",[1218,1220],"[props.token]"]