{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\loja-bim\\\\src\\\\view\\\\items\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from 'react';\nimport Header from '../header';\nimport { store, show, index, change } from '../../store/actions/items.action';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CircularProgress, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ItemEdit(props) {\n  _s();\n\n  useEffect(() => {\n    indexCall();\n  }, []);\n  const [state, setState] = useState({\n    isLoading: true,\n    isDeleted: null,\n    redirect: false,\n    tips: 0,\n    confirmElement: null,\n    id: props.match.params.id ? props.match.params.id : null\n  });\n  const dispatch = useDispatch();\n\n  const indexCall = () => {\n    if (state.id !== 'undefined') {\n      dispatch(index()).then(response => {\n        if (response) {\n          setState({\n            isLoading: false\n          });\n        } else {\n          dispatch(index()).then(response => {\n            setState({\n              isLoading: false\n            });\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ItemEdit, \"NZOQnpYch2aZHigjG6jsTpiu14A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ItemEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemEdit\");","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/view/items/index.js"],"names":["react","useState","useEffect","Header","store","show","index","change","useSelector","useDispatch","CircularProgress","TextField","ItemEdit","props","indexCall","state","setState","isLoading","isDeleted","redirect","tips","confirmElement","id","match","params","dispatch","then","response"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,MAA7B,QAA2C,kCAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,mBAA5C;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEtCX,EAAAA,SAAS,CAAE,MAAI;AACbY,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AACjCgB,IAAAA,SAAS,EAAE,IADsB;AAEjCC,IAAAA,SAAS,EAAE,IAFsB;AAGjCC,IAAAA,QAAQ,EAAE,KAHuB;AAIjCC,IAAAA,IAAI,EAAE,CAJ2B;AAKjCC,IAAAA,cAAc,EAAE,IALiB;AAMjCC,IAAAA,EAAE,EAAGT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBF,EAApB,GAA0BT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBF,EAA7C,GAAkD;AANrB,GAAD,CAAlC;AASA,QAAMG,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,QAAMK,SAAS,GAAG,MAAM;AAEtB,QAAGC,KAAK,CAACO,EAAN,KAAa,WAAhB,EAA4B;AAC1BG,MAAAA,QAAQ,CAAEnB,KAAK,EAAP,CAAR,CAAoBoB,IAApB,CAA0BC,QAAQ,IAAI;AACpC,YAAGA,QAAH,EAAa;AACXX,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAD,CAAR;AACD,SAFD,MAEO;AACLQ,UAAAA,QAAQ,CAAEnB,KAAK,EAAP,CAAR,CAAmBoB,IAAnB,CAAwBC,QAAQ,IAAI;AAClCX,YAAAA,QAAQ,CAAE;AAACC,cAAAA,SAAS,EAAE;AAAZ,aAAF,CAAR;AACD,WAFD;AAGD;AACF,OARD;AASD;AACF,GAbD;;AAeA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;GArCuBL,Q;UAeLH,W;;;KAfKG,Q","sourcesContent":["import react, { useState, useEffect } from 'react';\r\nimport Header from '../header';\r\nimport { store, show, index, change } from '../../store/actions/items.action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CircularProgress, TextField } from '@material-ui/core';\r\n\r\nexport default function ItemEdit(props) {\r\n\r\n  useEffect( ()=>{\r\n    indexCall();\r\n  }, []);\r\n\r\n  const [state, setState] = useState({\r\n    isLoading: true,\r\n    isDeleted: null,\r\n    redirect: false,\r\n    tips: 0,\r\n    confirmElement: null,\r\n    id: (props.match.params.id) ? props.match.params.id : null\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const indexCall = () => {\r\n\r\n    if(state.id !== 'undefined'){\r\n      dispatch( index() ).then( response => {\r\n        if(response) {\r\n          setState({ isLoading: false });\r\n        } else {\r\n          dispatch( index()).then(response => {\r\n            setState( {isLoading: false} );\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header/>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}