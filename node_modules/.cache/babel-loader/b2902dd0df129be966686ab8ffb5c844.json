{"ast":null,"code":"import { Http } from '../../config/Http';\nimport { changeLoading } from './loading.action';\nimport { changeNotify } from './notify.action';\nexport const actionTypes = {\n  CHANGE: 'REGISTER_CHANGE',\n  ERROR: 'REGISTER_ERROR',\n  SUCCESS: 'REGISTER_SUCCESS'\n};\nexport const changeRegister = data => ({\n  type: actionTypes.CHANGE,\n  data\n});\nexport const errorRegister = data => ({\n  type: actionTypes.ERROR,\n  data\n});\nexport const successRegister = data => ({\n  type: actionTypes.SUCCESS,\n  data\n});\nexport const setUserToken = token => dispatch => {\n  localStorage.setItem('access_token', token);\n  dispatch(changeRegister({\n    email: '',\n    password: ''\n  }));\n  dispatch(successRegister(true));\n};\nexport const register = data => dispatch => {\n  dispatch(changeLoading({\n    open: true,\n    msg: 'Cadastrando usu치rio...'\n  }));\n  return Http.post('/signup', data).then(response => {\n    dispatch(changeLoading({\n      open: false\n    }));\n\n    if (typeof response !== 'undefined') {\n      if (response.data.access_token) {\n        dispatch(changeNotify({\n          open: true,\n          class: 'success',\n          msg: 'Usu치rio cadastrado com sucesso.'\n        }));\n        dispatch(setUserToken(response.data.access_token));\n      }\n    }\n  }).catch(error => {\n    dispatch(changeLoading({\n      open: false\n    }));\n\n    if (error.response) {\n      dispatch(errorRegister(error.response.data.errors));\n    }\n  });\n};","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/store/actions/register.action.js"],"names":["Http","changeLoading","changeNotify","actionTypes","CHANGE","ERROR","SUCCESS","changeRegister","data","type","errorRegister","successRegister","setUserToken","token","dispatch","localStorage","setItem","email","password","register","open","msg","post","then","response","access_token","class","catch","error","errors"],"mappings":"AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,YAAT,QAA4B,iBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,MAAM,EAAE,iBADiB;AAEzBC,EAAAA,KAAK,EAAE,gBAFkB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAApB;AAMP,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACvCC,EAAAA,IAAI,EAAEN,WAAW,CAACC,MADqB;AAEvCI,EAAAA;AAFuC,CAAX,CAAvB;AAKP,OAAO,MAAME,aAAa,GAAIF,IAAD,KAAW;AACtCC,EAAAA,IAAI,EAAEN,WAAW,CAACE,KADoB;AAEtCG,EAAAA;AAFsC,CAAX,CAAtB;AAKP,OAAO,MAAMG,eAAe,GAAIH,IAAD,KAAW;AACxCC,EAAAA,IAAI,EAAEN,WAAW,CAACG,OADsB;AAExCE,EAAAA;AAFwC,CAAX,CAAxB;AAKP,OAAO,MAAMI,YAAY,GAAGC,KAAK,IAAIC,QAAQ,IAAI;AAE/CC,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,KAArC;AAEAC,EAAAA,QAAQ,CAAEP,cAAc,CAAC;AACvBU,IAAAA,KAAK,EAAE,EADgB;AAEvBC,IAAAA,QAAQ,EAAE;AAFa,GAAD,CAAhB,CAAR;AAKAJ,EAAAA,QAAQ,CAAEH,eAAe,CAAC,IAAD,CAAjB,CAAR;AACD,CAVM;AAYP,OAAO,MAAMQ,QAAQ,GAAGX,IAAI,IAAIM,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAACb,aAAa,CAAC;AACrBmB,IAAAA,IAAI,EAAE,IADe;AAErBC,IAAAA,GAAG,EAAE;AAFgB,GAAD,CAAd,CAAR;AAKA,SAAOrB,IAAI,CAACsB,IAAL,CAAU,SAAV,EAAqBd,IAArB,EACJe,IADI,CACCC,QAAQ,IAAI;AAChBV,IAAAA,QAAQ,CAAEb,aAAa,CAAC;AAACmB,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAf,CAAR;;AACA,QAAG,OAAOI,QAAP,KAAoB,WAAvB,EAAmC;AACjC,UAAGA,QAAQ,CAAChB,IAAT,CAAciB,YAAjB,EAA8B;AAC5BX,QAAAA,QAAQ,CAAEZ,YAAY,CAAC;AACrBkB,UAAAA,IAAI,EAAE,IADe;AAErBM,UAAAA,KAAK,EAAE,SAFc;AAGrBL,UAAAA,GAAG,EAAE;AAHgB,SAAD,CAAd,CAAR;AAMAP,QAAAA,QAAQ,CAAEF,YAAY,CAACY,QAAQ,CAAChB,IAAT,CAAciB,YAAf,CAAd,CAAR;AACD;AACF;AACF,GAdI,EAcFE,KAdE,CAcIC,KAAK,IAAI;AAChBd,IAAAA,QAAQ,CAAEb,aAAa,CAAC;AAACmB,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAf,CAAR;;AACA,QAAGQ,KAAK,CAACJ,QAAT,EAAkB;AAChBV,MAAAA,QAAQ,CAAEJ,aAAa,CAACkB,KAAK,CAACJ,QAAN,CAAehB,IAAf,CAAoBqB,MAArB,CAAf,CAAR;AACD;AACF,GAnBI,CAAP;AAoBD,CA1BM","sourcesContent":["import { Http } from '../../config/Http';\r\nimport { changeLoading } from './loading.action';\r\nimport { changeNotify} from './notify.action';\r\n\r\nexport const actionTypes = {\r\n  CHANGE: 'REGISTER_CHANGE',\r\n  ERROR: 'REGISTER_ERROR',\r\n  SUCCESS: 'REGISTER_SUCCESS'\r\n}\r\n\r\nexport const changeRegister = (data) => ({\r\n  type: actionTypes.CHANGE,\r\n  data\r\n})\r\n\r\nexport const errorRegister = (data) => ({\r\n  type: actionTypes.ERROR,\r\n  data\r\n})\r\n\r\nexport const successRegister = (data) => ({\r\n  type: actionTypes.SUCCESS,\r\n  data\r\n})\r\n\r\nexport const setUserToken = token => dispatch => {\r\n\r\n  localStorage.setItem('access_token', token);\r\n\r\n  dispatch( changeRegister({\r\n    email: '',\r\n    password: ''\r\n  }) )\r\n\r\n  dispatch( successRegister(true) )\r\n}\r\n\r\nexport const register = data => dispatch => {\r\n  dispatch(changeLoading({\r\n    open: true,\r\n    msg: 'Cadastrando usu치rio...'\r\n  }));\r\n\r\n  return Http.post('/signup', data)\r\n    .then(response => {\r\n      dispatch( changeLoading({open: false}) );\r\n      if(typeof response !== 'undefined'){\r\n        if(response.data.access_token){\r\n          dispatch( changeNotify({\r\n            open: true,\r\n            class: 'success',\r\n            msg: 'Usu치rio cadastrado com sucesso.'\r\n          }) )\r\n\r\n          dispatch( setUserToken(response.data.access_token) );\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      dispatch( changeLoading({open: false}) );\r\n      if(error.response){\r\n        dispatch( errorRegister(error.response.data.errors) )\r\n      }\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}