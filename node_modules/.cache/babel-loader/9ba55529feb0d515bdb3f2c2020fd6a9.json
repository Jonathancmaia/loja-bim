{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\loja-bim\\\\src\\\\view\\\\register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeRegister, register, errorRegister } from '../../store/actions/register.action';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\nimport { style } from './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user,\n    error,\n    success\n  } = useSelector(state => state.Register); //Abertura e fechamento do modal\n\n  const [open, setOpen] = useState();\n  useEffect(() => {\n    if (props.open === undefined) {//faz nada kkk\n    } else if (props.open === true) {\n      setOpen(true);\n    }\n  }, [props.open]);\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // ConferÃªncia das senhas\n\n\n  const [errorConfPassword, setErrorConfPassword] = useState(false);\n  useEffect(() => {\n    if (user.password !== user.conf_password) {\n      setErrorConfPassword(true);\n    } else {\n      setErrorConfPassword(false);\n    }\n  }, [user.conf_password]);\n  useEffect(() => {\n    if (user.password !== user.conf_password) {\n      setErrorConfPassword(true);\n    } else {\n      setErrorConfPassword(false);\n    }\n  }, [user.password]); // Valida formulario\n\n  const [isValid, setIsValid] = useState(false);\n  useEffect(() => {\n    if (error === undefined || error === '' || error === '{}' || error === []) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: open,\n    onHide: handleClose,\n    size: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.name && true,\n              margin: \"normal\",\n              label: \"Nome Completo\",\n              value: user.name,\n              onChange: text => {\n                dispatch(changeRegister({\n                  name: text.target.value\n                }));\n                error.name && delete error.name;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), error.name && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.name[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.cpf && true,\n              margin: \"normal\",\n              label: \"Cpf\",\n              value: user.cpf,\n              onChange: text => {\n                dispatch(changeRegister({\n                  cpf: text.target.value.replace(/[^0-9]/g, '')\n                }));\n                error.cpf && delete error.cpf;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), error.cpf && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.cpf[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.email && true,\n              margin: \"normal\",\n              label: \"Email\",\n              value: user.email,\n              type: \"email\",\n              autoComplete: \"email\",\n              onChange: text => {\n                dispatch(changeRegister({\n                  email: text.target.value\n                }));\n                error.email && delete error.email;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), error.email && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.email[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.tel && true,\n              margin: \"normal\",\n              label: \"Telefone\",\n              value: user.tel,\n              type: \"text\",\n              onChange: text => {\n                dispatch(changeRegister({\n                  tel: text.target.value.replace(/[^0-9]/g, '')\n                }));\n                error.tel && delete error.tel;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), error.tel && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.tel[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.password && true,\n              margin: \"normal\",\n              label: \"Senha\",\n              type: \"password\",\n              value: user.password,\n              onChange: text => {\n                dispatch(changeRegister({\n                  password: text.target.value\n                }));\n                error.password && delete error.password;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), error.password && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.password[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: errorConfPassword && true,\n              margin: \"normal\",\n              label: \"Confirme a Senha\",\n              type: \"password\",\n              value: user.conf_password,\n              onChange: text => {\n                dispatch(changeRegister({\n                  conf_password: text.target.value\n                }));\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), errorConfPassword && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: \"A senha digitada n\\xE3o \\xE9 igual a primeira.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: buttonOff,\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              size: \"large\",\n              className: \"mt-4 mb-4\",\n              onClick: () => dispatch(register(user)),\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center logue-se\",\n              onClick: e => {\n                handleClose();\n              },\n              children: \"J\\xE1 tem conta? Fa\\xE7a o Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), success && window.location.reload()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"+HnxM+j7ntJimrOJ9gleN7TwEd0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/view/register/index.js"],"names":["React","useState","useEffect","TextField","Button","useDispatch","useSelector","changeRegister","register","errorRegister","Link","Redirect","Modal","Container","Row","Col","style","Register","props","dispatch","user","error","success","state","open","setOpen","undefined","handleClose","errorConfPassword","setErrorConfPassword","password","conf_password","isValid","setIsValid","name","text","target","value","cpf","replace","email","tel","buttonOff","e","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeRegister, register, errorRegister } from '../../store/actions/register.action';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\r\nimport { style } from './style.css';\r\n\r\nexport default function Register(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, error, success } = useSelector(state => state.Register);\r\n\r\n  //Abertura e fechamento do modal\r\n  const [open, setOpen] = useState();\r\n\r\n  useEffect( ()=>{\r\n\r\n    if (props.open === undefined){\r\n      //faz nada kkk\r\n    } else if (props.open === true) {\r\n      setOpen(true);\r\n    }\r\n  },[props.open] );\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  // ConferÃªncia das senhas\r\n  const [errorConfPassword, setErrorConfPassword] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if (user.password !== user.conf_password){\r\n      setErrorConfPassword(true);\r\n    } else {\r\n      setErrorConfPassword(false);\r\n    }\r\n  },[user.conf_password]);\r\n\r\n  useEffect(()=>{\r\n    if (user.password !== user.conf_password){\r\n      setErrorConfPassword(true);\r\n    } else {\r\n      setErrorConfPassword(false);\r\n    }\r\n  },[user.password]);\r\n\r\n  // Valida formulario\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if (error === undefined || error === '' || error === '{}' || error === []){\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  },[error]);\r\n\r\n  return (\r\n    <Modal show={open} onHide={handleClose} size='xl'>\r\n      <Modal.Header closeButton>\r\n        <h2>\r\n          Cadastre-se\r\n        </h2>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {error.name && true}\r\n                margin = 'normal'\r\n                label = 'Nome Completo'\r\n                value = {user.name}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ name: text.target.value }));\r\n                  error.name && delete error.name;\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.name && \r\n                <strong className='text-danger'>{error.name[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {error.cpf && true}\r\n                margin = 'normal'\r\n                label = 'Cpf'\r\n                value = {user.cpf}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ cpf: text.target.value.replace(/[^0-9]/g, '') }));\r\n                  error.cpf && delete error.cpf;\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.cpf && \r\n                <strong className='text-danger'>{error.cpf[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {error.email && true}\r\n                margin = 'normal'\r\n                label = 'Email'\r\n                value = {user.email}\r\n                type = 'email'\r\n                autoComplete = 'email'\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ email: text.target.value }));\r\n                  error.email && delete error.email\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.email && \r\n                <strong className='text-danger'>{error.email[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {error.tel && true}\r\n                margin = 'normal'\r\n                label = 'Telefone'\r\n                value = {user.tel}\r\n                type = 'text'\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ tel: text.target.value.replace(/[^0-9]/g, '') }));\r\n                  error.tel && delete error.tel\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.tel && \r\n                <strong className='text-danger'>{error.tel[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {error.password && true}\r\n                margin = 'normal'\r\n                label = 'Senha'\r\n                type = 'password'\r\n                value = {user.password}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ password: text.target.value }));\r\n                  error.password && delete error.password;\r\n                }}\r\n                fullWidth\r\n              />\r\n              {error.password && \r\n                <strong className='text-danger'>{error.password[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {errorConfPassword && true}\r\n                margin = 'normal'\r\n                label = 'Confirme a Senha'\r\n                type = 'password'\r\n                value = {user.conf_password}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ conf_password: text.target.value }));\r\n                }}\r\n                fullWidth\r\n              />\r\n              {errorConfPassword && \r\n                <strong className='text-danger'>\r\n                  A senha digitada nÃ£o Ã© igual a primeira.\r\n                </strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                disabled={buttonOff}\r\n                variant = 'contained'\r\n                color = 'primary'\r\n                fullWidth\r\n                size = 'large'\r\n                className = 'mt-4 mb-4'\r\n                onClick = {() => dispatch( register(user) )}\r\n              >\r\n               Cadastrar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div\r\n                className='text-center logue-se'\r\n                onClick={(e)=>{handleClose()}}\r\n              >\r\n                JÃ¡ tem conta? FaÃ§a o Login\r\n              </div>\r\n              {(success) && window.location.reload()}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}