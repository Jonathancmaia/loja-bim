{"ast":null,"code":"import { actionTypes } from '../actions/cart.action';\nconst initialState = {\n  ITEMS: [],\n  ACTIVE: false\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.ADD_ITEM:\n      let arr_items = state.ITEMS;\n      let items = state.ITEMS.findIndex(item => item.id == payload.id);\n\n      if (items < 0) {\n        arr_items.push({\n          id: payload.id,\n          qtd: payload.qtd,\n          img: payload.img,\n          nome: payload.desc,\n          preco: payload.preco\n        });\n      } else {\n        arr_items.push({\n          id: payload.id,\n          qtd: state.ITEMS[items].qtd + 1,\n          img: payload.img,\n          nome: payload.desc,\n          preco: payload.preco\n        });\n        arr_items.splice(items, 1);\n      }\n\n      return { ...state,\n        ITEMS: arr_items\n      };\n\n    case actionTypes.REMOVE_ITEM:\n      const removed_arr_items = console.log(state.ITEMS.filter(item => item.id !== payload.id));\n    //return {...state, ITEMS: removed_arr_items}\n\n    case actionTypes.SET_CART:\n      localStorage.removeItem('storeCart');\n      localStorage.setItem('storeCart', JSON.stringify(state.ITEMS));\n\n    case actionTypes.GET_CART:\n      let cart = localStorage.getItem('storeCart');\n\n      if (cart !== null) {\n        return { ...state,\n          ITEMS: JSON.parse(cart)\n        };\n      }\n\n    case actionTypes.SET_ACTIVE:\n      if (state.ACTIVE === false) {\n        return { ...state,\n          ACTIVE: true\n        };\n      } else if (state.ACTIVE === true) {\n        return { ...state,\n          ACTIVE: false\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/store/reducers/cart.reducer.js"],"names":["actionTypes","initialState","ITEMS","ACTIVE","state","type","payload","ADD_ITEM","arr_items","items","findIndex","item","id","push","qtd","img","nome","desc","preco","splice","REMOVE_ITEM","removed_arr_items","console","log","filter","SET_CART","localStorage","removeItem","setItem","JSON","stringify","GET_CART","cart","getItem","parse","SET_ACTIVE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuB;AAACI,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAvB,KAA2C;AACxD,UAAQD,IAAR;AAEE,SAAKL,WAAW,CAACO,QAAjB;AACE,UAAIC,SAAS,GAAGJ,KAAK,CAACF,KAAtB;AACA,UAAIO,KAAK,GAAGL,KAAK,CAACF,KAAN,CAAYQ,SAAZ,CAAuBC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWN,OAAO,CAACM,EAAlD,CAAZ;;AAEA,UAAGH,KAAK,GAAG,CAAX,EAAc;AACZD,QAAAA,SAAS,CAACK,IAAV,CAAe;AACbD,UAAAA,EAAE,EAAEN,OAAO,CAACM,EADC;AAEbE,UAAAA,GAAG,EAAER,OAAO,CAACQ,GAFA;AAGbC,UAAAA,GAAG,EAAET,OAAO,CAACS,GAHA;AAIbC,UAAAA,IAAI,EAAEV,OAAO,CAACW,IAJD;AAKbC,UAAAA,KAAK,EAAEZ,OAAO,CAACY;AALF,SAAf;AAOD,OARD,MAQO;AACLV,QAAAA,SAAS,CAACK,IAAV,CAAe;AACbD,UAAAA,EAAE,EAAEN,OAAO,CAACM,EADC;AAEbE,UAAAA,GAAG,EAAEV,KAAK,CAACF,KAAN,CAAYO,KAAZ,EAAmBK,GAAnB,GAAyB,CAFjB;AAGbC,UAAAA,GAAG,EAAET,OAAO,CAACS,GAHA;AAIbC,UAAAA,IAAI,EAAEV,OAAO,CAACW,IAJD;AAKbC,UAAAA,KAAK,EAAEZ,OAAO,CAACY;AALF,SAAf;AAOAV,QAAAA,SAAS,CAACW,MAAV,CAAiBV,KAAjB,EAAwB,CAAxB;AACD;;AAEA,aAAO,EAAC,GAAGL,KAAJ;AAAWF,QAAAA,KAAK,EAAGM;AAAnB,OAAP;;AAGH,SAAKR,WAAW,CAACoB,WAAjB;AACE,YAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACF,KAAN,CAAYsB,MAAZ,CAAmBb,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAA/C,CAAZ,CAA1B;AAEA;;AAIF,SAAKZ,WAAW,CAACyB,QAAjB;AACEC,MAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe1B,KAAK,CAACF,KAArB,CAAlC;;AAEF,SAAKF,WAAW,CAAC+B,QAAjB;AACE,UAAIC,IAAI,GAAGN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAX;;AACA,UAAID,IAAI,KAAK,IAAb,EAAmB;AACjB,eAAO,EAAC,GAAG5B,KAAJ;AAAWF,UAAAA,KAAK,EAAE2B,IAAI,CAACK,KAAL,CAAWF,IAAX;AAAlB,SAAP;AACD;;AAEH,SAAKhC,WAAW,CAACmC,UAAjB;AACE,UAAI/B,KAAK,CAACD,MAAN,KAAiB,KAArB,EAA4B;AAC1B,eAAO,EAAC,GAAGC,KAAJ;AAAWD,UAAAA,MAAM,EAAE;AAAnB,SAAP;AACD,OAFD,MAEO,IAAIC,KAAK,CAACD,MAAN,KAAiB,IAArB,EAA2B;AAChC,eAAO,EAAC,GAAGC,KAAJ;AAAWD,UAAAA,MAAM,EAAE;AAAnB,SAAP;AACD;;AAGH;AACE,aAAOC,KAAP;AAtDJ;AAwDD,CAzDD","sourcesContent":["import { actionTypes } from '../actions/cart.action';\r\n\r\nconst initialState = {\r\n  ITEMS: [],\r\n  ACTIVE: false\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n  switch (type){\r\n\r\n    case actionTypes.ADD_ITEM:\r\n      let arr_items = state.ITEMS;\r\n      let items = state.ITEMS.findIndex( item => item.id == payload.id );\r\n\r\n      if(items < 0) {\r\n        arr_items.push({\r\n          id: payload.id,\r\n          qtd: payload.qtd,\r\n          img: payload.img,\r\n          nome: payload.desc,\r\n          preco: payload.preco\r\n        });\r\n      } else {\r\n        arr_items.push({\r\n          id: payload.id,\r\n          qtd: state.ITEMS[items].qtd + 1,\r\n          img: payload.img,\r\n          nome: payload.desc,\r\n          preco: payload.preco\r\n        });\r\n        arr_items.splice(items, 1);\r\n      }\r\n\r\n       return {...state, ITEMS:  arr_items}\r\n    \r\n\r\n    case actionTypes.REMOVE_ITEM:\r\n      const removed_arr_items = console.log(state.ITEMS.filter(item => item.id !== payload.id));\r\n\r\n      //return {...state, ITEMS: removed_arr_items}\r\n\r\n      \r\n\r\n    case actionTypes.SET_CART:\r\n      localStorage.removeItem('storeCart');\r\n      localStorage.setItem('storeCart', JSON.stringify(state.ITEMS));\r\n\r\n    case actionTypes.GET_CART:\r\n      let cart = localStorage.getItem('storeCart');\r\n      if (cart !== null) {\r\n        return {...state, ITEMS: JSON.parse(cart)}\r\n      }\r\n\r\n    case actionTypes.SET_ACTIVE:\r\n      if (state.ACTIVE === false) {\r\n        return {...state, ACTIVE: true}\r\n      } else if (state.ACTIVE === true) {\r\n        return {...state, ACTIVE: false}\r\n      }\r\n      \r\n\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}