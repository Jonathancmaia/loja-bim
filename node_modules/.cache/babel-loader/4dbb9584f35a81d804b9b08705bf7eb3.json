{"ast":null,"code":"import { HttpAuth } from '../../config/Http';\nexport const actionTypes = {\n  INDEX: 'ITEM_INDEX',\n  STORE: 'ITEM_STORE',\n  SHOW: 'ITEM_SHOW',\n  UPDATE: 'ITEM_UPDATE',\n  DESTROY: 'ITEM_UPDATE',\n  CHANGE: 'ITEM_CHANGE',\n  SUCCESS: 'ITEM_ERROR',\n  ERROR: 'ITEM ERROR'\n};\nexport const change = data => ({\n  type: actionTypes.CHANGE,\n  data\n});\nexport const success = data => ({\n  type: actionTypes.SUCCESS,\n  data\n});\nexport const error = data => ({\n  type: actionTypes.ERROR,\n  data\n});\nexport const indexResponse = (data, isLoadMore) => ({\n  type: type,\n  data,\n  isLoadMore\n});\nexport const index = (data, isLoadMore) => dispatch => {\n  return HttpAuth.get('/item?' + new URLSerchParams(query)).then(response => {\n    if (typeof response !== 'undefined') {\n      dispatch(indexResponse(response.data, isLoadMore));\n    }\n  }).catch(error => {\n    return 'algo deu errado.';\n  });\n};\nexport const store = () => dispatch => {\n  return HttpAuth.post('/item?' + new URLSerchParams(query)).then(response => {\n    if (typeof response !== 'undefined') {\n      dispatch(indexResponse(response.data));\n    }\n  }).catch(error => {\n    return 'algo deu errado.';\n  });\n};\nexport const show = () => dispatch => {\n  return HttpAuth.post('/item?' + new URLSerchParams(query)).then(response => {\n    if (typeof response !== 'undefined') {\n      dispatch(indexResponse(response.data));\n    }\n  }).catch(error => {\n    return 'algo deu errado.';\n  });\n};","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/store/actions/items.action.js"],"names":["HttpAuth","actionTypes","INDEX","STORE","SHOW","UPDATE","DESTROY","CHANGE","SUCCESS","ERROR","change","data","type","success","error","indexResponse","isLoadMore","index","dispatch","get","URLSerchParams","query","then","response","catch","store","post","show"],"mappings":"AAAA,SAASA,QAAT,QAAyB,mBAAzB;AAGA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,KAAK,EAAE,YADkB;AAEzBC,EAAAA,KAAK,EAAE,YAFkB;AAGzBC,EAAAA,IAAI,EAAE,WAHmB;AAIzBC,EAAAA,MAAM,EAAE,aAJiB;AAKzBC,EAAAA,OAAO,EAAE,aALgB;AAMzBC,EAAAA,MAAM,EAAE,aANiB;AAOzBC,EAAAA,OAAO,EAAE,YAPgB;AAQzBC,EAAAA,KAAK,EAAE;AARkB,CAApB;AAUP,OAAO,MAAMC,MAAM,GAAIC,IAAD,KAAW;AAC/BC,EAAAA,IAAI,EAAEX,WAAW,CAACM,MADa;AAE/BI,EAAAA;AAF+B,CAAX,CAAf;AAKP,OAAO,MAAME,OAAO,GAAIF,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEX,WAAW,CAACO,OADc;AAEhCG,EAAAA;AAFgC,CAAX,CAAhB;AAKP,OAAO,MAAMG,KAAK,GAAIH,IAAD,KAAW;AAC9BC,EAAAA,IAAI,EAAEX,WAAW,CAACQ,KADY;AAE9BE,EAAAA;AAF8B,CAAX,CAAd;AAKP,OAAO,MAAMI,aAAa,GAAG,CAACJ,IAAD,EAAOK,UAAP,MAAuB;AAClDJ,EAAAA,IAAI,EAAEA,IAD4C;AAElDD,EAAAA,IAFkD;AAGlDK,EAAAA;AAHkD,CAAvB,CAAtB;AAMP,OAAO,MAAMC,KAAK,GAAG,CAACN,IAAD,EAAOK,UAAP,KAAsBE,QAAQ,IAAI;AACrD,SAAOlB,QAAQ,CAACmB,GAAT,CAAa,WAAW,IAAIC,cAAJ,CAAmBC,KAAnB,CAAxB,EACNC,IADM,CACDC,QAAQ,IAAI;AAChB,QAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnCL,MAAAA,QAAQ,CAAEH,aAAa,CAACQ,QAAQ,CAACZ,IAAV,EAAgBK,UAAhB,CAAf,CAAR;AACD;AACF,GALM,EAMNQ,KANM,CAMAV,KAAK,IAAI;AACd,WAAQ,kBAAR;AACD,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMW,KAAK,GAAG,MAAMP,QAAQ,IAAI;AACrC,SAAOlB,QAAQ,CAAC0B,IAAT,CAAc,WAAW,IAAIN,cAAJ,CAAmBC,KAAnB,CAAzB,EACNC,IADM,CACDC,QAAQ,IAAI;AAChB,QAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnCL,MAAAA,QAAQ,CAAEH,aAAa,CAACQ,QAAQ,CAACZ,IAAV,CAAf,CAAR;AACD;AACF,GALM,EAMNa,KANM,CAMAV,KAAK,IAAI;AACd,WAAQ,kBAAR;AACD,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMa,IAAI,GAAG,MAAMT,QAAQ,IAAI;AACpC,SAAOlB,QAAQ,CAAC0B,IAAT,CAAc,WAAW,IAAIN,cAAJ,CAAmBC,KAAnB,CAAzB,EACNC,IADM,CACDC,QAAQ,IAAI;AAChB,QAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnCL,MAAAA,QAAQ,CAAEH,aAAa,CAACQ,QAAQ,CAACZ,IAAV,CAAf,CAAR;AACD;AACF,GALM,EAMNa,KANM,CAMAV,KAAK,IAAI;AACd,WAAQ,kBAAR;AACD,GARM,CAAP;AASD,CAVM","sourcesContent":["import { HttpAuth } from '../../config/Http';\r\n\r\n\r\nexport const actionTypes = {\r\n  INDEX: 'ITEM_INDEX',\r\n  STORE: 'ITEM_STORE',\r\n  SHOW: 'ITEM_SHOW',\r\n  UPDATE: 'ITEM_UPDATE',\r\n  DESTROY: 'ITEM_UPDATE',\r\n  CHANGE: 'ITEM_CHANGE',\r\n  SUCCESS: 'ITEM_ERROR',\r\n  ERROR: 'ITEM ERROR'\r\n}\r\nexport const change = (data) => ({\r\n  type: actionTypes.CHANGE,\r\n  data\r\n});\r\n\r\nexport const success = (data) => ({\r\n  type: actionTypes.SUCCESS,\r\n  data\r\n})\r\n\r\nexport const error = (data) => ({\r\n  type: actionTypes.ERROR,\r\n  data\r\n});\r\n\r\nexport const indexResponse = (data, isLoadMore) => ({\r\n  type: type,\r\n  data,\r\n  isLoadMore\r\n});\r\n\r\nexport const index = (data, isLoadMore) => dispatch => {\r\n  return HttpAuth.get('/item?' + new URLSerchParams(query))\r\n  .then(response => {\r\n    if (typeof response !== 'undefined') {\r\n      dispatch( indexResponse(response.data, isLoadMore) );\r\n    }\r\n  })\r\n  .catch(error => {\r\n    return ('algo deu errado.')\r\n  })\r\n}\r\n\r\nexport const store = () => dispatch => {\r\n  return HttpAuth.post('/item?' + new URLSerchParams(query))\r\n  .then(response => {\r\n    if (typeof response !== 'undefined') {\r\n      dispatch( indexResponse(response.data) );\r\n    }\r\n  })\r\n  .catch(error => {\r\n    return ('algo deu errado.')\r\n  })\r\n}\r\n\r\nexport const show = () => dispatch => {\r\n  return HttpAuth.post('/item?' + new URLSerchParams(query))\r\n  .then(response => {\r\n    if (typeof response !== 'undefined') {\r\n      dispatch( indexResponse(response.data) );\r\n    }\r\n  })\r\n  .catch(error => {\r\n    return ('algo deu errado.')\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}