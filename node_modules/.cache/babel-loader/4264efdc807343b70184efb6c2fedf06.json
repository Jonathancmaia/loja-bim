{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\loja-bim\\\\src\\\\view\\\\register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Typography, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeRegister, register } from '../../store/actions/register.action';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user,\n    error,\n    success\n  } = useSelector(state => state.Register); //Abertura e fechamento do modal\n\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (props.open) {\n      setOpen(true);\n    }\n  }, [props.open]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: open,\n    onHide: handleClose,\n    size: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"mt-2\",\n        variant: \"h6\",\n        component: \"h1\",\n        children: \"Increva-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.name && true,\n              margin: \"normal\",\n              label: \"Nome\",\n              value: user.name,\n              onChange: text => {\n                dispatch(changeRegister({\n                  name: text.target.value\n                }));\n                if (error.name && delete error.name) ;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), error.name && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.name[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.email && true,\n              margin: \"normal\",\n              label: \"Email\",\n              value: user.email,\n              type: \"email\",\n              autoComplete: \"email\",\n              onChange: text => {\n                dispatch(changeRegister({\n                  email: text.target.value\n                }));\n                if (error.email && delete error.email) ;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), error.email && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.email[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.password && true,\n              margin: \"normal\",\n              label: \"Senha\",\n              type: \"password\",\n              value: user.password,\n              onChange: text => {\n                dispatch(changeRegister({\n                  password: text.target.value\n                }));\n                if (error.password && delete error.password) ;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), error.password && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.password[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              size: \"large\",\n              className: \"mt-4 mb-4\",\n              onClick: () => dispatch(register(user)),\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                className: \"mt-4 text-danger\",\n                children: \"Fazer Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), success && /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"FobXlFhonVpDHm2TOjO7mKptkPU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/view/register/index.js"],"names":["React","useState","useEffect","TextField","Typography","Button","useDispatch","useSelector","changeRegister","register","Link","Redirect","Modal","Container","Row","Col","Register","props","dispatch","user","error","success","state","open","setOpen","handleClose","name","text","target","value","email","password"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Typography, Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeRegister, register } from '../../store/actions/register.action';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\r\n\r\nexport default function Register(props) {\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, error, success } = useSelector(state => state.Register);\r\n\r\n  //Abertura e fechamento do modal\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    if (props.open){\r\n      setOpen(true);\r\n    }\r\n  },[props.open]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Modal show={open} onHide={handleClose} size='xl'>\r\n      <Modal.Header closeButton>\r\n        <Typography className='mt-2' variant='h6' component='h1'>\r\n          Increva-se\r\n        </Typography>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.name) && true}\r\n                margin = 'normal'\r\n                label = 'Nome'\r\n                value = {user.name}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ name: text.target.value }));\r\n                  if (error.name && delete error.name);\r\n                }}\r\n              />\r\n              {(error.name) && \r\n                <strong className='text-danger'>{error.name[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.email) && true}\r\n                margin = 'normal'\r\n                label = 'Email'\r\n                value = {user.email}\r\n                type = 'email'\r\n                autoComplete = 'email'\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ email: text.target.value }));\r\n                  if (error.email && delete error.email);\r\n                }}\r\n              />\r\n              {(error.email) && \r\n                <strong className='text-danger'>{error.email[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.password) && true}\r\n                margin = 'normal'\r\n                label = 'Senha'\r\n                type = 'password'\r\n                value = {user.password}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ password: text.target.value }));\r\n                  if (error.password && delete error.password);\r\n                }}\r\n              />\r\n              {(error.password) && \r\n                <strong className='text-danger'>{error.password[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                variant = 'contained'\r\n                color = 'primary'\r\n                fullWidth\r\n                size = 'large'\r\n                className = 'mt-4 mb-4'\r\n                onClick = {() => dispatch( register(user) )}\r\n              >\r\n               Cadastrar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div className='text-center'>\r\n                <Link to='/login' className='mt-4 text-danger'>\r\n                  Fazer Login\r\n                </Link>\r\n              </div>\r\n              {(success) &&\r\n                <Redirect to=\"/me\" />\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}