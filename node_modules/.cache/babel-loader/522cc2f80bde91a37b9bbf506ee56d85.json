{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\loja-bim\\\\src\\\\view\\\\register\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeRegister, register } from '../../store/actions/register.action';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\nimport { style } from './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(props) {\n  _s();\n\n  console.log(props.open);\n  const dispatch = useDispatch();\n  const {\n    user,\n    error,\n    success\n  } = useSelector(state => state.Register); //Abertura e fechamento do modal\n\n  const [open, setOpen] = useState();\n  useEffect(() => {\n    if (props.open === undefined) {//faz nada kkk\n    } else if (props.open === true) {\n      setOpen(true);\n    }\n  }, [props.open]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: open,\n    onHide: handleClose,\n    size: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Inscreva-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.name && true,\n              margin: \"normal\",\n              label: \"Nome Completo\",\n              value: user.name,\n              onChange: text => {\n                dispatch(changeRegister({\n                  name: text.target.value\n                }));\n                if (error.name && delete error.name) ;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), error.name && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.name[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.cpf && true,\n              margin: \"normal\",\n              label: \"Cpf\",\n              value: user.cpf,\n              onChange: text => {\n                dispatch(changeRegister({\n                  cpf: text.target.value\n                }));\n                if (error.cpf && delete error.cpf) ;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), error.cpf && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.cpf[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.email && true,\n              margin: \"normal\",\n              label: \"Email\",\n              value: user.email,\n              type: \"email\",\n              autoComplete: \"email\",\n              onChange: text => {\n                dispatch(changeRegister({\n                  email: text.target.value\n                }));\n                if (error.email && delete error.email) ;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), error.email && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.email[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.tel && true,\n              margin: \"normal\",\n              label: \"Telefone\",\n              value: user.telefone,\n              type: \"text\",\n              onChange: text => {\n                dispatch(changeRegister({\n                  telefone: text.target.value\n                }));\n                if (error.telefone && delete error.telefone) ;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), error.telefone && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.telefone[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.password && true,\n              margin: \"normal\",\n              label: \"Senha\",\n              type: \"password\",\n              value: user.password,\n              onChange: text => {\n                dispatch(changeRegister({\n                  password: text.target.value\n                }));\n                if (error.password && delete error.password) ;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), error.password && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.password[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: error.conf_password && true,\n              margin: \"normal\",\n              label: \"Confirme a Senha\",\n              type: \"password\",\n              value: user.conf_password,\n              onChange: text => {\n                dispatch(changeRegister({\n                  conf_password: text.target.value\n                }));\n                if (error.conf_password && delete error.conf_password) ;\n              },\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), error.conf_password && /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-danger\",\n              children: error.conf_password[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              size: \"large\",\n              className: \"mt-4 mb-4\",\n              onClick: () => dispatch(register(user)),\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center logue-se\",\n              onClick: e => {\n                handleClose();\n              },\n              children: \"J\\xE1 tem conta? Fa\\xE7a o Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), success && /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"/MYKeMvbcjFqFy1vcGKtD9UpQ1A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/view/register/index.js"],"names":["React","useState","useEffect","TextField","Button","useDispatch","useSelector","changeRegister","register","Link","Redirect","Modal","Container","Row","Col","style","Register","props","console","log","open","dispatch","user","error","success","state","setOpen","undefined","handleClose","name","text","target","value","cpf","email","tel","telefone","password","conf_password","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeRegister, register } from '../../store/actions/register.action';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\r\nimport { style } from './style.css';\r\n\r\nexport default function Register(props) {\r\n\r\n  console.log(props.open)\r\n\r\n  const dispatch = useDispatch();\r\n  const { user, error, success } = useSelector(state => state.Register);\r\n\r\n  //Abertura e fechamento do modal\r\n  const [open, setOpen] = useState();\r\n\r\n  useEffect( ()=>{\r\n\r\n    if (props.open === undefined){\r\n      //faz nada kkk\r\n    } else if (props.open === true) {\r\n      setOpen(true);\r\n    }\r\n  },[props.open] );\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <Modal show={open} onHide={handleClose} size='xl'>\r\n      <Modal.Header closeButton>\r\n        <h2>\r\n          Inscreva-se\r\n        </h2>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.name) && true}\r\n                margin = 'normal'\r\n                label = 'Nome Completo'\r\n                value = {user.name}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ name: text.target.value }));\r\n                  if (error.name && delete error.name);\r\n                }}\r\n                fullWidth\r\n              />\r\n              {(error.name) && \r\n                <strong className='text-danger'>{error.name[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.cpf) && true}\r\n                margin = 'normal'\r\n                label = 'Cpf'\r\n                value = {user.cpf}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ cpf: text.target.value }));\r\n                  if (error.cpf && delete error.cpf);\r\n                }}\r\n                fullWidth\r\n              />\r\n              {(error.cpf) && \r\n                <strong className='text-danger'>{error.cpf[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.email) && true}\r\n                margin = 'normal'\r\n                label = 'Email'\r\n                value = {user.email}\r\n                type = 'email'\r\n                autoComplete = 'email'\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ email: text.target.value }));\r\n                  if (error.email && delete error.email);\r\n                }}\r\n                fullWidth\r\n              />\r\n              {(error.email) && \r\n                <strong className='text-danger'>{error.email[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.tel) && true}\r\n                margin = 'normal'\r\n                label = 'Telefone'\r\n                value = {user.telefone}\r\n                type = 'text'\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ telefone: text.target.value }));\r\n                  if (error.telefone && delete error.telefone);\r\n                }}\r\n                fullWidth\r\n              />\r\n              {(error.telefone) && \r\n                <strong className='text-danger'>{error.telefone[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.password) && true}\r\n                margin = 'normal'\r\n                label = 'Senha'\r\n                type = 'password'\r\n                value = {user.password}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ password: text.target.value }));\r\n                  if (error.password && delete error.password);\r\n                }}\r\n                fullWidth\r\n              />\r\n              {(error.password) && \r\n                <strong className='text-danger'>{error.password[0]}</strong>\r\n              }\r\n            </Col>\r\n            <Col>\r\n              <TextField\r\n                error = {(error.conf_password) && true}\r\n                margin = 'normal'\r\n                label = 'Confirme a Senha'\r\n                type = 'password'\r\n                value = {user.conf_password}\r\n                onChange = {text => {\r\n                  dispatch( changeRegister({ conf_password: text.target.value }));\r\n                  if (error.conf_password && delete error.conf_password);\r\n                }}\r\n                fullWidth\r\n              />\r\n              {(error.conf_password) && \r\n                <strong className='text-danger'>{error.conf_password[0]}</strong>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                variant = 'contained'\r\n                color = 'primary'\r\n                fullWidth\r\n                size = 'large'\r\n                className = 'mt-4 mb-4'\r\n                onClick = {() => dispatch( register(user) )}\r\n              >\r\n               Cadastrar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div\r\n                className='text-center logue-se'\r\n                onClick={(e)=>{handleClose()}}\r\n              >\r\n                Já tem conta? Faça o Login\r\n              </div>\r\n              {(success) &&\r\n                <Redirect to='/' />\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}