{"ast":null,"code":"import React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction IsAuthenticated() {\n  const IsLogged = () => {\n    //Recuperação de token de usuário no local storage\n    const access_token = localStorage.getItem('access_token');\n\n    if (access_token) {\n      //Fetch para recuperação do usuário via token\n      fetch('http://api-lojabim.test/api/me', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest',\n          'Authorization': 'Bearer ' + access_token\n        }\n      }).then(response => {\n        return response.json();\n      }).then(json => {\n        console.log(json);\n\n        if (json.error) {\n          alert('usuário não encontrado');\n        } else {\n          localStorage.setItem('user', json.json().stringfy());\n        }\n      });\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: console.log(IsLogged())\n  }, void 0, false);\n}\n\n_c = IsAuthenticated;\nexport { IsAuthenticated };\n\nvar _c;\n\n$RefreshReg$(_c, \"IsAuthenticated\");","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/Api/Auth.js"],"names":["React","useState","IsAuthenticated","IsLogged","access_token","localStorage","getItem","fetch","method","headers","then","response","json","console","log","error","alert","setItem","stringfy"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,eAAT,GAA0B;AAExB,QAAMC,QAAQ,GAAG,MAAM;AAErB;AACA,UAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;;AAEA,QAAIF,YAAJ,EAAiB;AAEf;AACAG,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,QAAAA,MAAM,EAAE,KAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,8BAAoB,gBAFb;AAGP,2BAAiB,YAAYL;AAHtB;AAF6B,OAAnC,CAAL,CAOGM,IAPH,CAOSC,QAAD,IAAc;AACpB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OATD,EASGF,IATH,CASSE,IAAD,IAAQ;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAIA,IAAI,CAACG,KAAT,EAAe;AACbC,UAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,SAFD,MAEO;AACLX,UAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACA,IAAL,GAAYM,QAAZ,EAA7B;AACD;AACF,OAhBD;AAkBA,aAAO,IAAP;AACD,KAtBD,MAsBO;AACL,aAAO,KAAP;AACD;AACF,GA9BD;;AAgCA,sBACE;AAAA,cACGL,OAAO,CAACC,GAAR,CAAYX,QAAQ,EAApB;AADH,mBADF;AAKD;;KAvCQD,e;AAyCT,SAAQA,eAAR","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction IsAuthenticated(){\r\n\r\n  const IsLogged = () => {\r\n\r\n    //Recuperação de token de usuário no local storage\r\n    const access_token = localStorage.getItem('access_token');\r\n\r\n    if (access_token){\r\n\r\n      //Fetch para recuperação do usuário via token\r\n      fetch('http://api-lojabim.test/api/me', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Requested-With': 'XMLHttpRequest',\r\n          'Authorization': 'Bearer ' + access_token\r\n        }\r\n      }).then((response) => {\r\n        return response.json();\r\n      }).then((json)=>{\r\n        console.log(json);\r\n        if (json.error){\r\n          alert('usuário não encontrado');\r\n        } else {\r\n          localStorage.setItem('user', json.json().stringfy());\r\n        }\r\n      });\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(IsLogged())}\r\n    </>\r\n  );\r\n}\r\n\r\nexport {IsAuthenticated};"]},"metadata":{},"sourceType":"module"}