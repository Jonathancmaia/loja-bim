{"ast":null,"code":"import _regeneratorRuntime from\"C:/laragon/www/loja-bim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/laragon/www/loja-bim/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Axios from'axios';import{apiUrl}from'./App';export var Http=Axios.create({baseURL:apiUrl});export var HttpAuth=Axios.create({baseURL:apiUrl});HttpAuth.interceptors.request.use(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return localStorage.getItem('access_token');case 2:_context.t0=_context.sent;config.headers.Authorization='Bearer '+_context.t0;return _context.abrupt(\"return\",config);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());HttpAuth.interceptors.response.use(function(response){return response;},function(error){if(error.response.status===401){localStorage.removeItem('access_token');}});","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/config/Http.js"],"names":["Axios","apiUrl","Http","create","baseURL","HttpAuth","interceptors","request","use","config","localStorage","getItem","headers","Authorization","response","error","status","removeItem"],"mappings":"yRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,OAAvB,CAEA,MAAO,IAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACG,MAAN,CAAa,CAC/BC,OAAO,CAAEH,MADsB,CAAb,CAAb,CAIP,MAAO,IAAMI,CAAAA,QAAQ,CAAGL,KAAK,CAACG,MAAN,CAAa,CACnCC,OAAO,CAAEH,MAD0B,CAAb,CAAjB,CAIPI,QAAQ,CAACC,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,0FACE,iBAAOC,MAAP,wIACmDC,CAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,CADnD,kCACEF,MAAM,CAACG,OAAP,CAAeC,aADjB,CACiC,SADjC,6CAESJ,MAFT,wDADF,gEAOAJ,QAAQ,CAACC,YAAT,CAAsBQ,QAAtB,CAA+BN,GAA/B,CAAoC,SAAAM,QAAQ,CAAI,CAC5C,MAAOA,CAAAA,QAAP,CACD,CAFH,CAEK,SAAAC,KAAK,CAAI,CACV,GAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,GAA0B,GAA9B,CAAkC,CAChCN,YAAY,CAACO,UAAb,CAAwB,cAAxB,EACD,CACF,CANH","sourcesContent":["import Axios from 'axios';\r\nimport { apiUrl } from './App';\r\n\r\nexport const Http = Axios.create({\r\n  baseURL: apiUrl\r\n});\r\n\r\nexport const HttpAuth = Axios.create({\r\n  baseURL: apiUrl\r\n});\r\n\r\nHttpAuth.interceptors.request.use(\r\n  async (config) => {\r\n    config.headers.Authorization = 'Bearer ' + await localStorage.getItem('access_token');\r\n    return config;\r\n  }\r\n);\r\n\r\nHttpAuth.interceptors.response.use( response => {\r\n    return response;\r\n  }, error => {\r\n    if (error.response.status === 401){\r\n      localStorage.removeItem('access_token');\r\n    }\r\n  }\r\n);"]},"metadata":{},"sourceType":"module"}