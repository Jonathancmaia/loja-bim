{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Http } from '../../config/Http';\nimport { changeLoading } from './loading.action';\nimport { changeNotify } from './notify.action';\nimport { useDispatch, useSelector } from 'react-redux';\nexport const actionTypes = {\n  CHANGE: 'CHANGE_AUTH',\n  SUCCESS: 'SUCCESS_AUTH'\n};\nexport const change = data => ({\n  type: actionTypes.CHANGE,\n  data\n});\nexport const success = data => ({\n  type: actionTypes.SUCCESS,\n  data\n});\nexport const SetUserToken = token => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    success\n  } = useSelector(state => state.Auth);\n  localStorage.setItem('access_token', token);\n  dispatch(change({\n    email: '',\n    password: ''\n  }));\n  dispatch(success(true));\n};\n\n_s(SetUserToken, \"TG2DiOId5PbzNP91+vb3Ac+6nn0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SetUserToken;\nexport const login = credentials => dispatch => {\n  console.log(sucess);\n  dispatch(changeLoading({\n    open: true,\n    msg: 'Autenticndo usuário...'\n  }));\n  return Http.post('/login', {\n    email: credentials.email,\n    password: credentials.password\n  }).then(response => {\n    if (typeof response !== 'undefined') {\n      if (response.data.access_token) {\n        dispatch(changeLoading({\n          open: false\n        }));\n        dispatch(SetUserToken(response.data.access_token));\n      }\n    }\n  }).catch(error => {\n    if (typeof error.response !== 'undefined') {\n      if (error.response.status === 401 || error.response.status === 400) {\n        dispatch(changeLoading({\n          open: false\n        }));\n        dispatch(changeNotify({\n          open: true,\n          clss: 'error',\n          msg: 'Email e/ou senha incorretos'\n        }));\n      }\n    } else {\n      dispatch(changeLoading({\n        open: false\n      }));\n      dispatch(changeNotify({\n        open: true,\n        clss: 'error',\n        msg: 'Erro o se conectar ao servidor'\n      }));\n    }\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SetUserToken\");","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/store/actions/auth.action.js"],"names":["Http","changeLoading","changeNotify","useDispatch","useSelector","actionTypes","CHANGE","SUCCESS","change","data","type","success","SetUserToken","token","dispatch","state","Auth","localStorage","setItem","email","password","login","credentials","console","log","sucess","open","msg","post","then","response","access_token","catch","error","status","clss"],"mappings":"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","sourcesContent":["import { Http } from '../../config/Http';\r\nimport { changeLoading } from './loading.action';\r\nimport { changeNotify } from './notify.action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const actionTypes = {\r\n  CHANGE: 'CHANGE_AUTH',\r\n  SUCCESS: 'SUCCESS_AUTH'\r\n}\r\n\r\nexport const change = (data) => ({\r\n  type: actionTypes.CHANGE,\r\n  data,\r\n})\r\n\r\nexport const success = (data) => ({\r\n  type: actionTypes.SUCCESS,\r\n  data\r\n})\r\n\r\nexport const SetUserToken = token => {\r\n  const dispatch = useDispatch();\r\n  const { success } = useSelector(state => state.Auth)\r\n\r\n  localStorage.setItem('access_token', token);\r\n  dispatch( change({\r\n    email: '',\r\n    password: ''\r\n  }))\r\n\r\n  dispatch(success(true))\r\n}\r\n\r\nexport const login = credentials => dispatch => {\r\n  \r\n  console.log(sucess);\r\n\r\n  dispatch(changeLoading({\r\n    open: true,\r\n    msg: 'Autenticndo usuário...'\r\n  }))\r\n\r\n  return Http.post('/login', {\r\n    email: credentials.email,\r\n    password: credentials.password\r\n  }).then( (response)=>{\r\n    if (typeof response !== 'undefined'){\r\n      if(response.data.access_token){\r\n        dispatch( changeLoading({ open: false }) );\r\n        dispatch( SetUserToken(response.data.access_token));\r\n      }\r\n    }\r\n  }).catch(error => {\r\n    if (typeof error.response !== 'undefined'){\r\n      if (error.response.status === 401 || error.response.status === 400){\r\n        dispatch( changeLoading({ open: false }));\r\n        dispatch( changeNotify({\r\n          open: true,\r\n          clss: 'error',\r\n          msg: 'Email e/ou senha incorretos'\r\n        }));\r\n      }\r\n    } else {\r\n      dispatch( changeLoading({ open: false }));\r\n        dispatch( changeNotify({\r\n          open: true,\r\n          clss: 'error',\r\n          msg: 'Erro o se conectar ao servidor'\r\n        }));\r\n    }\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}