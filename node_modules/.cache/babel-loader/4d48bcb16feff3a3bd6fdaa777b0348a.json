{"ast":null,"code":"import { useState } from \"react\"; //Recuperação de token de usuário no local storage\n\nconst [access_token, setAccess_token] = useState();\nsetAccess_token(localStorage.getItem('access_token'));\nconst [user, setUser] = useState();\nsetUser(localStorage.getItem('access_token'));\n\nconst IsLogged = () => {\n  if (access_token && user) {\n    //Fetch para recuperação do usuário via token\n    fetch('http://api-lojabim.test/api/me', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest',\n        'Authorization': 'Bearer ' + access_token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(json => {\n      console.log(json);\n\n      if (json.error) {\n        alert('usuário não encontrado');\n      } else {\n        localStorage.setItem('user', JSON.stringify(json));\n      }\n    });\n    return true;\n  } else {\n    return false;\n  }\n};\n\n_c = IsLogged;\n\nfunction IsAuthenticated() {\n  return IsLogged();\n}\n\n_c2 = IsAuthenticated;\nexport { IsAuthenticated };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IsLogged\");\n$RefreshReg$(_c2, \"IsAuthenticated\");","map":{"version":3,"sources":["C:/laragon/www/loja-bim/src/Api/Auth.js"],"names":["useState","access_token","setAccess_token","localStorage","getItem","user","setUser","IsLogged","fetch","method","headers","then","response","json","console","log","error","alert","setItem","JSON","stringify","IsAuthenticated"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AAEA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCF,QAAQ,EAAhD;AACAE,eAAe,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAAf;AAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACAM,OAAO,CAACH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAAP;;AAEA,MAAMG,QAAQ,GAAG,MAAM;AAErB,MAAIN,YAAY,IAAII,IAApB,EAAyB;AAEvB;AACAG,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,4BAAoB,gBAFb;AAGP,yBAAiB,YAAYT;AAHtB;AAF6B,KAAnC,CAAL,CAOGU,IAPH,CAOSC,QAAD,IAAc;AACpB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATD,EASGF,IATH,CASSE,IAAD,IAAQ;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAI,CAACG,KAAT,EAAe;AACbC,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,OAFD,MAEO;AACLd,QAAAA,YAAY,CAACe,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA7B;AACD;AACF,KAhBD;AAkBA,WAAO,IAAP;AACD,GAtBD,MAsBO;AACL,WAAO,KAAP;AACD;AACF,CA3BD;;KAAMN,Q;;AA6BN,SAASc,eAAT,GAA0B;AAExB,SAAOd,QAAQ,EAAf;AACD;;MAHQc,e;AAKT,SAAQA,eAAR","sourcesContent":["import { useState } from \"react\";\r\n\r\n//Recuperação de token de usuário no local storage\r\n\r\nconst [access_token, setAccess_token] = useState();\r\nsetAccess_token(localStorage.getItem('access_token'));\r\n\r\nconst [user, setUser] = useState();\r\nsetUser(localStorage.getItem('access_token'));\r\n\r\nconst IsLogged = () => {\r\n\r\n  if (access_token && user){\r\n\r\n    //Fetch para recuperação do usuário via token\r\n    fetch('http://api-lojabim.test/api/me', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Requested-With': 'XMLHttpRequest',\r\n        'Authorization': 'Bearer ' + access_token\r\n      }\r\n    }).then((response) => {\r\n      return response.json();\r\n    }).then((json)=>{\r\n      console.log(json);\r\n      if (json.error){\r\n        alert('usuário não encontrado');\r\n      } else {\r\n        localStorage.setItem('user', JSON.stringify(json));\r\n      }\r\n    });\r\n\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction IsAuthenticated(){\r\n\r\n  return IsLogged();\r\n}\r\n\r\nexport {IsAuthenticated};"]},"metadata":{},"sourceType":"module"}